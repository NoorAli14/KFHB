# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

input ChangePasswordInput {
  password_reset_token: String!
  password: String!
}

input CreateUserInput {
  username: String
  contact_no: String
  password: String
  first_name: String
  middle_name: String
  last_name: String
  gender: String
  date_of_birth: String
  nationality_id: Float
  status: String
  roles: [IdsInput!]
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input ForgotPasswordInput {
  email: String!
}

type Holiday {
  id: ID
  calendar_day: String
  holiday_type: String
  holiday_details: String
  remarks: String
  is_repetitive: Float
  status: String
  created_on: String
  created_by: String
  updated_on: String
  updated_by: String
  deleted_on: String
  deleted_by: String
}

input HolidayInput {
  calendar_day: String!
  holiday_type: String
  holiday_details: String
  is_repetitive: Float
  remarks: String
  status: String
}

input IdsInput {
  id: String!
  _deleted: Boolean
}

input KeyValInput {
  record_key: String!
  record_value: String!
}

type Leave {
  id: ID
  user_id: String
  calendar_day: String
  holiday_type: String
  holiday_details: String
  remarks: String
  is_repetitive: Float
  status: String
  created_on: String
  created_by: String
  updated_on: String
  updated_by: String
  deleted_on: String
  deleted_by: String
}

input LeaveInput {
  user_id: String!
  calendar_day: String!
  holiday_type: String
  holiday_details: String
  is_repetitive: Float
  remarks: String
  status: String
}

input LoginInput {
  email: String!
  password: String!
}

type Module {
  id: ID
  name: String
  parent_id: String
  status: String
  created_on: String
  created_by: String
  permissions: [Permission!]!
  sub_modules: [Module!]!
}

input ModuleInput {
  name: String!
  parent_id: String
  status: String
}

type Mutation {
  addUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!, id: String!): User!
  deleteUser(id: String!): Boolean!
  addRole(input: RoleInput!): Role!
  updateRole(input: RoleInput!, id: String!): Role!
  deleteRole(id: String!): Boolean!
  addModule(input: ModuleInput!): Module!
  updateModule(input: ModuleInput!, id: String!): Module!
  deleteModule(id: String!): Boolean!
  addPermission(input: PermissionInput!): Permission!
  updatePermission(input: PermissionInput!, id: String!): Permission!
  deletePermission(id: String!): Boolean!
  updateUserRole(input: UserRoleInput!, id: String!): UserRole!
  addUserRole(input: UserRoleInput!): UserRole!
  deleteUserRole(id: String!): Boolean!
  addRoleModule(input: RoleModuleInput!): RoleModule!
  updateRoleModule(input: RoleModuleInput!, id: String!): RoleModule!
  deleteRoleModule(id: String!): Boolean!
  addRoleModulePermission(input: RoleModulePermissionInput!): RoleModulePermission!
  updateRoleModulePermission(input: RoleModulePermissionInput!, id: String!): RoleModulePermission!
  deleteRoleModulePermission(id: String!): Boolean!
  changePassword(input: ChangePasswordInput!): User!
  addWorkingDay(input: WorkingDayInput!): WorkingDay!
  updateWorkingDay(input: WorkingDayInput!, id: String!): WorkingDay!
  deleteWorkingDay(id: String!): Boolean!
  addHoliday(input: HolidayInput!): Holiday!
  updateHoliday(input: HolidayInput!, id: String!): Holiday!
  deleteHoliday(id: String!): Boolean!
  addLeave(input: LeaveInput!): Leave!
  updateLeave(input: LeaveInput!, id: String!): Leave!
  deleteLeave(id: String!): Boolean!
}

type Permission {
  id: ID
  record_type: String
  created_on: String
  created_by: String
}

input PermissionInput {
  record_type: String!
}

type Query {
  usersList: [User!]!
  findUserById(id: String!): User!
  resetInvitationToken(id: String!): User!
  findUserBy(checks: [KeyValInput!]!): [User!]!
  rolesList: [Role!]!
  findRole(id: String!): Role!
  findRoleBy(checks: [KeyValInput!]!): [Role!]!
  modulesList: [Module!]!
  findModule(id: String!): Module!
  findModuleBy(checks: [KeyValInput!]!): [Module!]!
  permissionsList: [Permission!]!
  findPermission(id: String!): Permission!
  findPermissionBy(checks: [KeyValInput!]!): [Permission!]!
  userRolesList: [UserRole!]!
  findUserRole(id: String!): UserRole!
  findUserRoleBy(checks: [KeyValInput!]!): [UserRole!]!
  roleModulesList: [RoleModule!]!
  findRoleModule(id: String!): RoleModule!
  findRoleModuleBy(checks: [KeyValInput!]!): [RoleModule!]!
  roleModulePermissionsList: [RoleModulePermission!]!
  findRoleModulePermission(id: String!): RoleModulePermission!
  findRoleModulePermissionBy(checks: [KeyValInput!]!): [RoleModulePermission!]!
  login(input: LoginInput!): User!
  forgotPassword(input: ForgotPasswordInput!): User!
  workingDaysList: [WorkingDay!]!
  findWorkingDayById(id: String!): WorkingDay!
  findWorkingDayBy(checks: [KeyValInput!]!): [WorkingDay!]!
  holidaysList: [Holiday!]!
  findHolidayById(id: String!): Holiday!
  findHolidayBy(checks: [KeyValInput!]!): [Holiday!]!
  leavesList: [Leave!]!
  findLeaveById(id: String!): Leave!
  findLeaveBy(checks: [KeyValInput!]!): [Leave!]!
}

type Role {
  id: ID
  name: String
  description: String
  status: String
  created_on: String
  created_by: String
  updated_on: String
  updated_by: String
  deleted_on: String
  deleted_by: String
  modules: [Module!]!
}

input RoleInput {
  name: String!
  description: String
  status: String
  modules: [IdsInput!]
}

type RoleModule {
  id: ID
  module_id: String
  role_id: String
  status: String
  created_on: String
  created_by: String
}

input RoleModuleInput {
  module_id: String!
  role_id: String!
  status: String
}

type RoleModulePermission {
  id: ID
  role_module_id: String
  permission_id: String
  status: String
  created_on: String
  created_by: String
}

input RoleModulePermissionInput {
  role_module_id: String!
  permission_id: String!
  status: String
}

input UpdateUserInput {
  username: String
  contact_no: String
  password: String
  first_name: String
  middle_name: String
  last_name: String
  gender: String
  date_of_birth: String
  nationality_id: Float
  status: String
  roles: [IdsInput!]
}

type User {
  id: ID
  username: String
  email: String
  contact_no: String
  first_name: String
  middle_name: String
  last_name: String
  gender: String
  date_of_birth: String
  nationality_id: Float
  status: String
  created_on: String
  created_by: String
  updated_on: String
  updated_by: String
  deleted_on: String
  deleted_by: String
  roles: [Role!]!
  modules: [Module!]!
  invitation_token: String
  invitation_token_expiry: DateTime
  password_reset_token: String
  password_reset_token_expiry: DateTime
  leaves: [Leave!]!
}

type UserRole {
  id: ID!
  user_id: String!
  role_id: String!
  status: String
  created_on: String
  created_by: String
}

input UserRoleInput {
  user_id: String!
  role_id: String!
  status: String
}

type WorkingDay {
  id: ID
  week_day: String
  start_time: String!
  end_time: String!
  remarks: String
  full_day: Float
  status: String
  created_on: String
  created_by: String
  updated_on: String
  updated_by: String
  deleted_on: String
  deleted_by: String
}

input WorkingDayInput {
  week_day: String!
  start_time: String
  end_time: String
  full_day: Float
  remarks: String
  status: String
}
