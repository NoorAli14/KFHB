# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

input AlmRequestAlertInput {
  reference_no: String!
  response_code: String!
  status: String!
}

type AmlRequest {
  id: String!
  user_id: String!
  tenant_id: String!
  request_reference: String!
  aml_text: String!
  remarks: String!
  status: String!
  responses: [AmlResponse!]
  created_on: DateTime!
  created_by: String!
  updated_on: DateTime!
  updated_by: String!
  deleted_on: DateTime!
  deleted_by: String!
}

type AmlResponse {
  id: String!
  status: String!
  response_on: DateTime!
  response_text: String!
  created_on: DateTime!
  created_by: String!
  updated_on: DateTime!
  updated_by: String!
  deleted_on: DateTime!
  deleted_by: String!
  request_id: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  addTemplateResponse(input: NewTemplateResponseInput!): TemplateResponse!
  amlScreening(user_id: String!): AmlRequest!
  amlAlert(input: AlmRequestAlertInput!): AmlRequest!
}

input NewTemplateResponseInput {
  results: String!
  remarks: String!
  template_id: String!
  user_id: String!
}

type Option {
  id: String!
  name: String!
  name_ar: String!
  question_id: String
  question: Question
  status: String!
  created_on: DateTime
  created_by: String
  updated_on: DateTime
  updated_by: String
}

type Query {
  findTemplateResponseByUserId(user_id: String!): [TemplateResponse!]!
  optionsList: [Option!]!
  findOption(id: String!): Option!
  questionsList: [Question!]!
  findQuestion(id: String!): Question!
  sectionsList: [Section!]!
  findSection(id: String!): Section!
  templatesList: [Template!]!
  findTemplateByName(name: String!): Template!
  findTemplate(id: String!): Template!
  amlListByUserId(user_id: String!): [AmlRequest!]!
  getAmlStatueByRefNo(user_id: String!, reference_no: String!): AmlResponse!
}

type Question {
  id: String!
  title: String!
  title_ar: String!
  type: String!
  rules: String!
  status: String!
  options: [Option!]
  section_id: String
  section: Section
  created_on: DateTime
  created_by: String
  updated_on: DateTime
  updated_by: String
}

type Section {
  id: String!
  tenant_id: String
  name: String!
  name_ar: String!
  level: String!
  questions: [Question!]
  template_id: String
  template: Template
  status: String!
  created_on: DateTime
  created_by: String
  updated_on: DateTime
  updated_by: String
}

type Template {
  id: String!
  name: String!
  name_ar: String!
  sections: [Section!]
  status: String!
  created_on: DateTime
  created_by: String
  updated_on: DateTime
  updated_by: String
}

type TemplateResponse {
  id: String!
  results: String!
  remarks: String!
  user_id: String!
  template: Template
  status: String!
  created_on: DateTime
  created_by: String
  updated_on: DateTime
  updated_by: String
}
