{"version":3,"sources":["./src/app/features/entitlement/models/role.model.ts","./src/app/features/entitlement/role/components/permission/permission.component.ts","./src/app/features/entitlement/role/components/permission/permission.component.html","./src/app/features/entitlement/role/components/role-form/role-form.component.ts","./src/app/features/entitlement/role/components/role-form/role-form.component.html","./src/app/features/entitlement/role/components/table-row/table-row.component.ts","./src/app/features/entitlement/role/components/table-row/table-row.component.html","./src/app/features/entitlement/role/role-routing.module.ts","./src/app/features/entitlement/role/role.module.ts","./src/app/features/entitlement/role/services/role.service.ts","./src/app/features/entitlement/role/views/role/role.component.ts","./src/app/features/entitlement/role/views/role/role.component.html","./src/app/shared/models/base.model.ts"],"names":[],"mappings":"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","file":"role-role-module-es2015.js","sourcesContent":["import { BaseModel } from '@shared/models/base.model';\r\nimport { Modules } from './modules.model';\r\n\r\nexport class Role extends BaseModel{\r\n    name:string;\r\n    description:string;\r\n    permissions:Array<{id}>=[];\r\n}","import { Modules } from \"./../../../models/modules.model\";\r\nimport { Component, OnInit, Input, Injector } from \"@angular/core\";\r\n\r\nimport { camelToSentenceCase } from \"@shared/helpers/global.helper\";\r\nimport { Permission } from \"@feature/entitlement/models/config.model\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\n@Component({\r\n    selector: \"app-permission\",\r\n    templateUrl: \"./permission.component.html\",\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                padding: 10px;\r\n            }\r\n        `,\r\n    ],\r\n    animations: fuseAnimations,\r\n})\r\nexport class PermissionComponent extends BaseComponent implements OnInit {\r\n    @Input() modules: Array<Modules>;\r\n    @Input() permissions: Array<Permission>;\r\n    displayedColumns = [\"module\"];\r\n    dataSource = new MatTableDataSource<any>();\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.modules = this._mapperService.makeModulesFlat(\r\n            cloneDeep(this.modules)\r\n        );\r\n        const totalPermissions = this.permissions.map((x) => x.record_type);\r\n        this.displayedColumns = this.displayedColumns.concat(totalPermissions);\r\n        this.modules.forEach((module) => {\r\n            module['module'] = module.name;\r\n            totalPermissions.forEach((permission) => {\r\n                module[permission] = module.permissions.find(\r\n                    (item) => item.record_type == permission\r\n                )\r\n                    ? true\r\n                    : false;\r\n            });\r\n        });\r\n        this.dataSource.data = this.modules;\r\n    }\r\n\r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n}\r\n","<div  *ngIf=\"modules.length > 0\">\r\n    <mat-table\r\n        #table\r\n        matSort\r\n        matSortActive=\"id\"\r\n        matSortDirection=\"asc\"\r\n        matSortDisableClear\r\n        [dataSource]=\"dataSource\"\r\n        [@animateStagger]=\"{ value: '50' }\"\r\n    >\r\n        <!-- COLUMNS AND ROWS-->\r\n        <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n            <mat-header-cell *matHeaderCellDef>{{\r\n                camelToSentenceCase(key)\r\n            }}</mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let element; let i = dataIndex\">\r\n                <span *ngIf=\"key.includes('module'); else icon\">{{\r\n                    element[key]\r\n                }}</span>\r\n\r\n                <ng-template #icon>\r\n                    <span style=\"margin-left: 5px\">\r\n                        <mat-icon style=\"color: green\" *ngIf=\"element[key]\"\r\n                            >done\r\n                        </mat-icon>\r\n                        <mat-icon\r\n                            matTooltip=\"No Permission\"\r\n                            style=\"color: red\"\r\n                            *ngIf=\"!element[key]\"\r\n                            >close</mat-icon\r\n                        ></span\r\n                    >\r\n                </ng-template>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <!-- -->\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n            [@animate]=\"{ value: '*', params: { y: '100%' } }\"\r\n        >\r\n        </mat-row>\r\n    </mat-table>\r\n</div>\r\n\r\n<div\r\n    *ngIf=\"modules.length < 1\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center\"\r\n    class=\"p-16\"\r\n>\r\n    No module assigned to this role\r\n</div>\r\n","import { Output, EventEmitter, Injectable, Injector } from \"@angular/core\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { Component, OnInit, Inject, ViewEncapsulation } from \"@angular/core\";\r\nimport { Validators, FormArray, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Permission } from \"@feature/entitlement/models/config.model\";\r\nimport { camelToSentenceCase } from \"@shared/helpers/global.helper\";\r\nimport { MODULES } from '@shared/constants/app.constants';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { RoleService } from '../../services/role.service';\r\n\r\n@Component({\r\n    selector: \"app-role-form\",\r\n    templateUrl: \"./role-form.component.html\",\r\n    styleUrls: [\"./role-form.component.scss\"],\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RoleFormComponent extends BaseComponent implements OnInit {\r\n    roleForm: FormGroup;\r\n    displayedColumns = [\"module\"];\r\n    dataSource = new MatTableDataSource<Permission>();\r\n    modulesMapped: any[] = [];\r\n    \r\n    \r\n    @Output() sendResponse: EventEmitter<Role> = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<RoleFormComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any, private _roleService: RoleService\r\n        ,\r\n        injector: Injector\r\n        ) {\r\n            super(injector,MODULES.ROLE_MANAGEMENT);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       debugger\r\n        const totalPermissions=this.data.permissions.map((x)=>x.record_type)\r\n        this.displayedColumns= this.displayedColumns.concat(totalPermissions)\r\n\r\n        this._errorEmitService.currentMessage.pipe(takeUntil(this._unsubscribeAll)).subscribe((item) => {\r\n            this.errorType = item.type;\r\n            this.responseMessage = item.message;\r\n        });\r\n        this.roleForm = new FormGroup({\r\n            id: new FormControl(this.data.role.id),\r\n            name: new FormControl(this.data.role.name, [Validators.required]),\r\n            description: new FormControl(this.data.role.description, [\r\n                Validators.required,\r\n            ]),\r\n            modules: new FormArray([]),\r\n        });\r\n        const formArray = this.modules;\r\n        this.data.modules.forEach((item) => {\r\n            const form = this.createFormGroup(item);\r\n            formArray.push(form);\r\n        });\r\n        this.dataSource.data = this.data.modules;\r\n    }\r\n    get modules() {\r\n        return this.roleForm.get(\"modules\") as FormArray;\r\n    }\r\n\r\n    createControl(value) {\r\n        return new FormControl(value ? value : false);\r\n    }\r\n    getFormControl(form, key) {\r\n        return form.get(key);\r\n    }\r\n    createFormGroup(module) {\r\n        const form = new FormGroup({\r\n            module: new FormControl(module),\r\n        });\r\n        module.permissions.forEach((permission) => {\r\n            form.addControl(\r\n                permission.record_type,\r\n                this.createControl(permission.value)\r\n            );\r\n        });\r\n        return form;\r\n    }\r\n    onSubmit() {\r\n        const model = { ...this.roleForm.value };\r\n        let permissions = [];\r\n        model.modules.forEach((element) => {\r\n            const data = this._roleService.getSelectedPermissions(this.data,element);\r\n            if (data && data.length > 0) {\r\n                permissions = permissions.concat(data);\r\n            }\r\n        });\r\n        model.permissions = permissions;\r\n        this.sendResponse.emit(model);\r\n    }\r\n    \r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n  \r\n    \r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n         <div class=\"logo mb-24 mb-md-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon mr-12\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    security\r\n                </mat-icon>\r\n                <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Roles\r\n                </span>\r\n            </div>\r\n            <button\r\n                mat-icon-button\r\n                (click)=\"matDialogRef.close()\"\r\n                aria-label=\"Close dialog\"\r\n            >\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n       \r\n        <form\r\n        class=\"p-24 mr-24\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0\"\r\n        name=\"modulesForm\"\r\n        (ngSubmit)=\"onSubmit()\"\r\n        novalidate\r\n        [formGroup]=\"roleForm\"\r\n    >\r\n    <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n        <br>\r\n        <div\r\n            fxLayout=\"row wrap\"\r\n            fxLayout.lt-lg=\"column\"\r\n            fxLayoutAlign.lt-lg=\"center\"\r\n            fxLayoutAlign=\"start center\"\r\n            fxFlex=\"1 1 auto\"\r\n        >\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\" >\r\n                <mat-label>Name <app-required-indicator></app-required-indicator></mat-label>\r\n                <input matInput formControlName=\"name\" />\r\n                <mat-icon matSuffix class=\"secondary-text\"\r\n                    >account_circle</mat-icon\r\n                >\r\n                <mat-error>\r\n                    <app-mat-error\r\n                        [control]=\"roleForm.get('name')\"\r\n                    ></app-mat-error>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n                <mat-label>Description <app-required-indicator></app-required-indicator></mat-label>\r\n                <textarea matInput placeholder=\"Description\" formControlName=\"description\"></textarea>\r\n                <mat-icon matSuffix class=\"secondary-text\"\r\n                    >account_circle</mat-icon>\r\n                <mat-error>\r\n                    <app-mat-error [control]=\"roleForm.get('description')\"></app-mat-error>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <hr>\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <mat-table style=\"width: 100%;\" #table matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear [dataSource]=\"dataSource\" [@animateStagger]=\"{ value: '50' }\">\r\n                <!-- COLUMNS AND ROWS-->\r\n                <ng-container *ngFor=\"let key of displayedColumns;  \" [matColumnDef]=\"key\">\r\n                   <mat-header-cell  *matHeaderCellDef>\r\n                    <div *ngIf=\"key=='module'\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                        {{ camelToSentenceCase(key)  }}\r\n                       </div>   \r\n                       <div *ngIf=\"key!=='module'\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                        {{ camelToSentenceCase(key)  }}\r\n                       </div>   \r\n                   </mat-header-cell>\r\n                  \r\n                   <mat-cell  *matCellDef=\"let control of modules.controls; let i = index;\" >\r\n                       <div *ngIf=\"key==='module'; else checkboxes\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                        <span >{{modules.controls[i].get(key).value.name}}</span>\r\n                       </div>\r\n                       <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                        <ng-template #checkboxes>\r\n                            <ng-container *ngIf=\"modules.controls[i].get(key); else nothing\">\r\n                                <input type=\"checkbox\" [formControl]=\"modules.controls[i].get(key)\" >\r\n                            </ng-container>\r\n                        <ng-template #nothing>\r\n                            <input type=\"checkbox\" disabled >\r\n                        </ng-template>\r\n                        </ng-template>\r\n                       </div>\r\n                            \r\n                   </mat-cell>\r\n               </ng-container>\r\n               <!-- -->\r\n               <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n               <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n               </mat-row>\r\n           </mat-table>\r\n        </div>\r\n        <br>\r\n        <div class=\"actions mb-24\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n            <button\r\n                type=\"button\"\r\n                mat-raised-button\r\n                (click)=\"matDialogRef.close()\"\r\n                color=\"secondary\"\r\n                aria-label=\"Follow\"\r\n            >\r\n                Cancel\r\n            </button>\r\n            &nbsp;&nbsp;&nbsp;\r\n          \r\n            <button\r\n            appPermission\r\n            [permissions]=\"data.userPermissions\"\r\n            [type]=\"data.role.id ? 'edit' : 'create'\"\r\n                type=\"submit\"\r\n                [disabled]=\"roleForm.invalid\"\r\n                mat-raised-button\r\n                color=\"accent\"\r\n                class=\"submit-button\"\r\n                aria-label=\"Send Message\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    SimpleChanges,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport {\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate,\r\n} from \"@angular/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n    getName,\r\n    camelToSentenceCase,\r\n    camelToSnakeCaseText,\r\n} from \"@shared/helpers/global.helper\";\r\nimport { CONFIG } from \"@config/index\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MODULES } from \"@shared/constants/app.constants\";\r\n\r\n@Component({\r\n    selector: \"app-table-row\",\r\n    templateUrl: \"./table-row.component.html\",\r\n    styleUrls: [\"./table-row.component.scss\"],\r\n    animations: [\r\n        trigger(\"expandableRow\", [\r\n            state(\r\n                \"collapsed, void\",\r\n                style({\r\n                    height: \"0px\",\r\n                    visibility: \"hidden\",\r\n                })\r\n            ),\r\n            state(\r\n                \"expanded\",\r\n                style({\r\n                    \"min-height\": \"48px\",\r\n                    height: \"*\",\r\n                    visibility: \"visible\",\r\n                })\r\n            ),\r\n            transition(\r\n                \"expanded <=> collapsed, void <=> *\",\r\n                animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\r\n            ),\r\n        ]),\r\n    ],\r\n})\r\nexport class TableRowComponent extends BaseComponent {\r\n    @Input() roles: any[];\r\n    @Input() displayedColumns: string[];\r\n    @Input() permissions: string[];\r\n    @Output() delete = new EventEmitter();\r\n    @Output() edit = new EventEmitter();\r\n    pageSize: number = CONFIG.PAGE_SIZE;\r\n    pageSizeOptions: Array<number> = CONFIG.PAGE_SIZE_OPTIONS;\r\n    expandedId: string = \"\";\r\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n    dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n    constructor(public _matDialog: MatDialog, injector: Injector) {\r\n        super(injector, MODULES.ROLE_MANAGEMENT);\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.roles.currentValue != changes.roles.previousValue) {\r\n            this.dataSource = new MatTableDataSource(this.roles);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        }\r\n    }\r\n    toggleExpandableSymbol(id: string): void {\r\n        this.expandedId = this.expandedId === id ? \"\" : id;\r\n    }\r\n    displayName(id, array) {\r\n        return getName(id, \"name\", array);\r\n    }\r\n    camelToSnakeCase(text) {\r\n        return camelToSnakeCaseText(text);\r\n    }\r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n    onDelete(id) {\r\n        this.delete.emit(id);\r\n    }\r\n    onEdit(data) {\r\n        this.edit.emit(data);\r\n    }\r\n}\r\n","<div >\r\n    <mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\r\n\r\n        <!-- COLUMNS AND ROWS-->\r\n        <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n            <mat-header-cell *matHeaderCellDef>{{ key.includes('Icon') ? 'Modules' : camelToSentenceCase(key) }}</mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let element; let i = dataIndex\">\r\n                <span *ngIf=\"key.includes('Icon') || key.includes('action') ; else columns\">\r\n                    <ng-container *ngIf=\"key.includes('Icon')\">\r\n                        <mat-icon *ngIf=\"key === 'expandIcon' \" matTooltip=\"Explore\" (click)=\"toggleExpandableSymbol(element['id'])\"> {{expandedId==element['id'] ? 'keyboard_arrow_up' : ' keyboard_arrow_down'}} </mat-icon>\r\n                        <mat-icon *ngIf=\"key === 'expandIcon' \" matTooltip=\"Close\" (click)=\"toggleExpandableSymbol(element['id'])\"></mat-icon>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"key.includes('action')\">\r\n                        <mat-icon appPermission [permissions]=\"userPermissions\"  matTooltip=\"Delete user\" [type]=\"'delete'\" color=\"warn\" type=\"button\" (click)=\"onDelete(element['id'])\">delete</mat-icon> &nbsp;&nbsp;\r\n                        <mat-icon type=\"button\" matTooltip=\"Edit user\" (click)=\"onEdit(element)\">mode_edit</mat-icon>\r\n                    </ng-container>\r\n                </span>\r\n                <ng-template #columns>\r\n                    <span *ngIf=\"element[camelToSnakeCase(key)]; else defaultText\">\r\n                        <ng-container  *ngIf=\"camelToSnakeCase(key).indexOf('created')<0; else date \"  >\r\n                            {{element[camelToSnakeCase(key)]}}\r\n                        </ng-container>\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template #defaultText>\r\n                    <app-default-text></app-default-text>\r\n                </ng-template>\r\n                <ng-template #date>\r\n                    {{element[camelToSnakeCase(key)] | date:'mediumDate'}}\r\n                </ng-template>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n            <mat-cell *matCellDef=\"let element\" [@expandableRow]=\"element['id'] === expandedId ? 'expanded' : 'collapsed'\">\r\n                <app-permission *ngIf=\"expandedId==element['id']\" [permissions]=\"permissions\" [modules]=\"element['modules']\"></app-permission>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- -->\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n        <mat-row class=\"expandable-row\" *matRowDef=\"let row; columns: ['expandedDetail'];\">\r\n        </mat-row>\r\n\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"pageSize\" showFirstLastButtons [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleComponent } from './views/role/role.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: RoleComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleRoutingModule { }\r\n","import { RoleComponent } from './views/role/role.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { RoleRoutingModule } from \"./role-routing.module\";\r\nimport { SharedModule } from \"@shared/shared.module\";\r\nimport { FuseSidebarModule } from \"@fuse/components\";\r\nimport { PermissionComponent } from './components/permission/permission.component';\r\nimport { RoleFormComponent } from './components/role-form/role-form.component';\r\nimport { TableRowComponent } from './components/table-row/table-row.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { MaterialModule } from '@shared/modules/material/material.module';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PermissionComponent,\r\n        RoleComponent,\r\n        RoleFormComponent,\r\n        TableRowComponent,\r\n    ],\r\n    imports: [\r\n        RoleRoutingModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        FuseSidebarModule,\r\n        FuseSharedModule,\r\n        MaterialModule,\r\n    ],\r\n    providers: [\r\n      { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n    ],\r\n    entryComponents:[RoleFormComponent]\r\n})\r\nexport class RoleModule {}\r\n","import { URI } from \"@shared/constants/app.constants\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { forkJoin } from \"rxjs\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { NetworkService } from \"@shared/services/network/network.service\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RoleService {\r\n    constructor(private _networkService: NetworkService) {}\r\n    getModules() {\r\n        return this._networkService.getAll(URI.MODULE);\r\n    }\r\n    getRoles() {\r\n        return this._networkService.getAll(URI.ROLE);\r\n    }\r\n    createRole(model: Role) {\r\n        return this._networkService.post(URI.ROLE, model);\r\n    }\r\n    editRole(id: string, model: Role) {\r\n        return this._networkService.onUpdate(`${URI.ROLE}/${id}`, model);\r\n    }\r\n    deleteRole(id: string) {\r\n        return this._networkService.onDelete(`${URI.ROLE}/${id}`);\r\n    }\r\n    forkRolesData() {\r\n        return forkJoin([\r\n            this.getRoles(),\r\n            this.getModules(),\r\n            this.getPermissions(),\r\n        ]);\r\n    }\r\n    getPermissions() {\r\n        return this._networkService.getAll(URI.PERMISSION);\r\n    }\r\n    getSelectedPermissions(data, element) {\r\n        const checked = Object.keys(element).filter((key) => {\r\n            return element[key] == true;\r\n        });\r\n        const module = data.modules.find(\r\n            (module) => module.id === element.module.id\r\n        );\r\n        const permissions = [];\r\n        checked.forEach((key) => {\r\n            const permission = element.module.permissions.find(\r\n                (item) => item.record_type == key\r\n            );\r\n\r\n            permissions.push({ id: permission.module_permission_id });\r\n        });\r\n        if (data.role.id && data.role.id.length > 0) {\r\n            module.permissions.forEach((x) => {\r\n                const exist = permissions.find(\r\n                    (item) => item.id == x.module_permission_id\r\n                );\r\n                if (!exist && x.value) {\r\n                    permissions.push({\r\n                        id: x.module_permission_id,\r\n                        _deleted: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return permissions;\r\n    }\r\n}\r\n","import { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    ViewEncapsulation,\r\n    ViewChild,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\n\r\nimport { removeRandom } from \"@shared/helpers/global.helper\";\r\nimport {  MODULES } from \"@shared/constants/app.constants\";\r\nimport {\r\n    ConfirmDialogModel,\r\n    ConfirmDialogComponent,\r\n} from \"@shared/components/confirm-dialog/confirm-dialog.component\";\r\nimport { RoleService } from \"../../services/role.service\";\r\nimport { RoleFormComponent } from \"../../components/role-form/role-form.component\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { Modules } from \"@feature/entitlement/models/modules.model\";\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\n@Component({\r\n    selector: \"app-role\",\r\n    templateUrl: \"./role.component.html\",\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RoleComponent extends BaseComponent implements OnInit {\r\n    roles: Role[] = [];\r\n    modules: Modules[] = [];\r\n    permissions: Permissions[] = [];\r\n    dialogRef: any;\r\n\r\n    displayedColumns = [\r\n        \"roleName\",\r\n        \"description\",\r\n        \"createdOn\",\r\n        \"expandIcon\",\r\n        \"action\",\r\n    ];\r\n\r\n    constructor(\r\n        public _matDialog: MatDialog,\r\n        private _roleService: RoleService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector, MODULES.ROLE_MANAGEMENT);\r\n    }\r\n    ngOnInit(): void {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        this._roleService.forkRolesData().pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.roles = response[0];\r\n                const modules = response[1];\r\n                this.permissions = response[2];\r\n                this.modules = this._mapperService.makeModulesFlat(modules);\r\n                this.roles = this.roles.map((role) => ({\r\n                    ...role,\r\n                    role_name: role.name,\r\n                }));\r\n            },\r\n            (response) => super.onError(response)\r\n        );\r\n    }\r\n\r\n    openDialog(data, modules): void {\r\n        var _this = this;\r\n        this.dialogRef = this._matDialog\r\n            .open(RoleFormComponent, {\r\n                data: {\r\n                    role: data ? data : new Role(),\r\n                    userPermissions: this.userPermissions,\r\n                    modules: modules ? modules : cloneDeep(this.modules),\r\n                    roles: this.roles,\r\n                    permissions: this.permissions,\r\n                },\r\n                disableClose: true,\r\n                hasBackdrop: true,\r\n                panelClass: \"app-role-form\",\r\n            })\r\n            .componentInstance.sendResponse.subscribe((response) => {\r\n                if (response.id) {\r\n                    _this.editRole(response);\r\n                } else {\r\n                    _this.createRole(response);\r\n                }\r\n            });\r\n    }\r\n    confirmDialog(id): void {\r\n        const message = removeRandom(MESSAGES.REMOVE_CONFIRMATION());\r\n        const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\r\n        const dialogRef = this._matDialog.open(ConfirmDialogComponent, {\r\n            data: dialogData,\r\n            disableClose: true,\r\n            panelClass: \"app-confirm-dialog\",\r\n            hasBackdrop: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((status) => {\r\n            if (status) {\r\n                this.onDelete(id);\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditHandler(data) {\r\n        const flatModules= this._mapperService.makeModulesFlat(cloneDeep(data.modules))\r\n        let modules = cloneDeep(this.modules);\r\n        modules = modules.map((el) => {\r\n            const exist =flatModules.find(x=>x.id==el.id);\r\n            if (!exist) return el;\r\n            el.permissions = el.permissions.map((x) => {\r\n                const item=exist.permissions.find((y) => y.id == x.id);\r\n                return {\r\n                    ...x,\r\n                    value: item?true : false,\r\n                    ...item\r\n                };\r\n            });\r\n            return el;\r\n        });\r\n        this.openDialog(data, modules);\r\n    }\r\n\r\n    createRole(data: Role) {\r\n        this._roleService.createRole(data).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                this.responseMessage = MESSAGES.CREATED(\"Role\");\r\n                const clone = cloneDeep(this.roles);\r\n                response.role_name = response.name;\r\n                clone.unshift(response);\r\n                this.roles = clone;\r\n                this.hideMessage();\r\n                this._matDialog.closeAll();\r\n                this._errorEmitService.emit(\"\", \"\");\r\n            },\r\n            (response) => {\r\n                this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n            }\r\n        );\r\n    }\r\n    hideMessage() {\r\n        setTimeout(() => {\r\n            this.responseMessage = \"\";\r\n        }, 2000);\r\n    }\r\n    editRole(model: Role) {\r\n        this._roleService.editRole(model.id, model).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                response.role_name = response.name;\r\n                this.responseMessage = MESSAGES.UPDATED(\"Role\");\r\n                const clone = cloneDeep(this.roles);\r\n                const index = clone.findIndex((x) => x.id == model.id);\r\n                clone[index] = response;\r\n                this.roles = clone;\r\n                this.hideMessage();\r\n                this._matDialog.closeAll();\r\n            },\r\n            (response) => {\r\n                this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n            }\r\n        );\r\n    }\r\n    onDelete(id: string) {\r\n        this._roleService.deleteRole(id).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                this.hideMessage();\r\n                const index = this.roles.findIndex((x) => x.id == id);\r\n                const clone = cloneDeep(this.roles);\r\n                clone.splice(index, 1);\r\n                this.roles = clone;\r\n                this.responseMessage = MESSAGES.DELETED(\"Role\");\r\n            },\r\n            (response) => super.onError(response)\r\n        );\r\n    }\r\n}\r\n","<div   class=\"page-container page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    settings_applications\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Roles\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper mx-32 mx-md-0\" >\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input  name=\"roleName\" placeholder=\"Search for a role\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n            <!-- ADD BUTTON -->\r\n            <button  mat-raised-button color=\"accent\" (click)=\"openDialog(null,null)\" class=\"add-product-button fuse-white mt-24 mt-md-0\">\r\n                <span>ADD NEW ROLE</span>\r\n            </button>\r\n            <!-- / ADD BUTTON -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" fusePerfectScrollbar>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <app-table-row (delete)=\"confirmDialog($event)\"  (edit)=\"onEditHandler($event)\" [roles]=\"roles\" [permissions]=\"permissions\" [displayedColumns]=\"displayedColumns\"  >\r\n            </app-table-row>\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export class BaseModel {\r\n    id: string;\r\n    status: string;\r\n\r\n    created_on?: Date=new Date();\r\n    updated_on?:  Date=new Date();;\r\n    created_by?: string;\r\n    updated_by?: string;\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}