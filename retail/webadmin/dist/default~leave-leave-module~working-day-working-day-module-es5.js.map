{"version":3,"sources":["webpack:///src/app/features/calender/models/working-week.model.ts","webpack:///src/app/features/calender/services/calendar.service.ts","webpack:///src/app/features/calender/working-day/components/working-day-form/working-day-form.component.ts","webpack:///src/app/features/calender/working-day/components/working-day-form/working-day-form.component.html","webpack:///src/app/shared/models/base.model.ts"],"names":["WorkingDay","CalendarService","_networkService","getAll","WORKING_DAYS","model","post","id","onUpdate","onDelete","HOLIDAYS","LEAVES","providedIn","WorkingDayFormComponent","matDialogRef","data","_service","dialog","injector","hour","minute","meridien","workingDaysList","sendResponse","workingDayForm","startTime","required","endTime","fullDay","remarks","weekDay","weekday","get","valueChanges","subscribe","value","disable","patchValue","enable","setValidators","control","dialogRef","open","meriden","afterClosed","result","undefined","getTime","full_day","start_time","end_time","emit","onSubmit","showPicker","selector","templateUrl","styleUrls","animations","encapsulation","None","BaseModel","created_on","Date","updated_on"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaA,U;;;;;;;;;;;;;;MAAmB,mE;;;;;;;;;;;;;;;;;ACFhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,e;;;AACT,+BAAoBC,eAApB,EAAqD;AAAA;;AAAjC,aAAAA,eAAA,GAAAA,eAAA;AAAmC;;;;yCAEtC;AACb,iBAAO,KAAKA,eAAL,CAAqBC,MAArB,CAA4B,oEAAIC,YAAhC,CAAP;AACH;;;yCAEgBC,K,EAAmB;AAChC,iBAAO,KAAKH,eAAL,CAAqBI,IAArB,CAA0B,oEAAIF,YAA9B,EAA4CC,KAA5C,CAAP;AACH;;;uCACcE,E,EAAYF,K,EAAmB;AAC1C,iBAAO,KAAKH,eAAL,CAAqBM,QAArB,WAAiC,oEAAIJ,YAArC,cAAqDG,EAArD,GAA2DF,KAA3D,CAAP;AACH;;;yCACgBE,E,EAAY;AACzB,iBAAO,KAAKL,eAAL,CAAqBO,QAArB,WAAiC,oEAAIL,YAArC,cAAqDG,EAArD,EAAP;AACH;;;sCAEa;AACV,iBAAO,KAAKL,eAAL,CAAqBC,MAArB,CAA4B,oEAAIO,QAAhC,CAAP;AACH;;;sCACaL,K,EAAgB;AAC1B,iBAAO,KAAKH,eAAL,CAAqBI,IAArB,CAA0B,oEAAII,QAA9B,EAAwCL,KAAxC,CAAP;AACH;;;oCACWE,E,EAAYF,K,EAAgB;AACpC,iBAAO,KAAKH,eAAL,CAAqBM,QAArB,WAAiC,oEAAIE,QAArC,cAAiDH,EAAjD,GAAuDF,KAAvD,CAAP;AACH;;;sCACaE,E,EAAY;AACtB,iBAAO,KAAKL,eAAL,CAAqBO,QAArB,WAAiC,oEAAIC,QAArC,cAAiDH,EAAjD,EAAP;AACH;;;oCAGW;AACR,iBAAO,KAAKL,eAAL,CAAqBC,MAArB,CAA4B,oEAAIQ,MAAhC,CAAP;AACH;;;oCACWN,K,EAAc;AACtB,iBAAO,KAAKH,eAAL,CAAqBI,IAArB,CAA0B,oEAAIK,MAA9B,EAAsCN,KAAtC,CAAP;AACH;;;kCACSE,E,EAAYF,K,EAAc;AAChC,iBAAO,KAAKH,eAAL,CAAqBM,QAArB,WAAiC,oEAAIG,MAArC,cAA+CJ,EAA/C,GAAqDF,KAArD,CAAP;AACH;;;oCACWE,E,EAAY;AACpB,iBAAO,KAAKL,eAAL,CAAqBO,QAArB,WAAiC,oEAAIE,MAArC,cAA+CJ,EAA/C,EAAP;AACH;;;;;;;uBA1CQN,e,EAAe,+I;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFZ;;;;;sEAEHA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACRW,oBAAU,EAAE;AADJ,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0CQ;;AAMI;;AACJ;;;;;;AAHI;;AAEA;;AAAA;;;;;;AAmCgB;;AAII;;AACJ;;;;;;AAHI;;AAEA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;QDzDnBC,uB;;;;;;;AAQT,uCACWC,YADX,EAEoCC,IAFpC,EAGYC,QAHZ,EAIYC,MAJZ,EAKIC,QALJ,EAKsB;AAAA;;AAAA;;AAElB,mCAAMA,QAAN;AANO,cAAAJ,YAAA,GAAAA,YAAA;AACyB,cAAAC,IAAA,GAAAA,IAAA;AACxB,cAAAC,QAAA,GAAAA,QAAA;AACA,cAAAC,MAAA,GAAAA,MAAA;AAVJ,cAAAE,IAAA,GAAO,EAAP;AACA,cAAAC,MAAA,GAAS,EAAT;AACA,cAAAC,QAAA,GAAW,IAAX;AACR,cAAAC,eAAA,GAAyB,4EAAzB;AACU,cAAAC,YAAA,GAAyC,IAAI,0DAAJ,EAAzC;AAOY;AAGrB;;;;mCAEO;AAAA;;AACJ,eAAKC,cAAL,GAAsB,IAAI,wDAAJ,CAAc;AAChCjB,cAAE,EAAE,IAAI,0DAAJ,CAAgB,KAAKQ,IAAL,CAAUR,EAA1B,CAD4B;AAEhCkB,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKV,IAAL,CAAUU,SAA1B,EAAqC,CAC5C,0DAAWC,QADiC,CAArC,CAFqB;AAKhCC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKZ,IAAL,CAAUY,OAA1B,EAAmC,CAAC,0DAAWD,QAAZ,CAAnC,CALuB;AAMhCE,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKb,IAAL,CAAUa,OAA1B,CANuB;AAOhCC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKd,IAAL,CAAUc,OAA1B,EAAmC,CAAC,0DAAWH,QAAZ,CAAnC,CAPuB;AAQhCI,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKf,IAAL,CAAUgB,OAA1B,EAAmC,CAAC,0DAAWL,QAAZ,CAAnC;AARuB,WAAd,CAAtB;AAUA,eAAKF,cAAL,CAAoBQ,GAApB,CAAwB,SAAxB,EAAmCC,YAAnC,CAAgDC,SAAhD,CAA0D,UAACC,KAAD,EAAW;AACjE,gBAAIA,KAAJ,EAAW;AACP,oBAAI,CAACX,cAAL,CAAoBQ,GAApB,CAAwB,WAAxB,EAAqCI,OAArC;;AACA,oBAAI,CAACZ,cAAL,CAAoBQ,GAApB,CAAwB,SAAxB,EAAmCI,OAAnC;;AACA,oBAAI,CAACZ,cAAL,CAAoBa,UAApB,CAA+B;AAC3BZ,yBAAS,EAAE,IADgB;AAE3BE,uBAAO,EAAE;AAFkB,eAA/B;AAIH,aAPD,MAOO;AACH,oBAAI,CAACH,cAAL,CAAoBQ,GAApB,CAAwB,WAAxB,EAAqCM,MAArC;;AACA,oBAAI,CAACd,cAAL,CAAoBQ,GAApB,CAAwB,SAAxB,EAAmCM,MAAnC;;AACA,oBAAI,CAACd,cAAL,CACKQ,GADL,CACS,WADT,EAEKO,aAFL,CAEmB,0DAAWb,QAF9B;;AAGA,oBAAI,CAACF,cAAL,CACKQ,GADL,CACS,SADT,EAEKO,aAFL,CAEmB,0DAAWb,QAF9B;AAGH;AACJ,WAlBD;AAmBH;;;kCAEa;AACV,2BAAU,KAAKP,IAAf,cAAuB,KAAKC,MAA5B,cAAsC,KAAKC,QAA3C;AACH;;;mCACiBmB,O,EAAS;AAAA;;AACvB,cAAIC,SAAS,GAAG,KAAKxB,MAAL,CAAYyB,IAAZ,CAAiB,4GAAjB,EAAuC;AACnD3B,gBAAI,EAAE;AACFI,kBAAI,EAAE,KAAKA,IADT;AAEFC,oBAAM,EAAE,KAAKA,MAFX;AAGFuB,qBAAO,EAAE,KAAKtB;AAHZ;AAD6C,WAAvC,CAAhB;AAQAoB,mBAAS,CAACG,WAAV,GAAwBV,SAAxB,CAAkC,UAACW,MAAD,EAAY;AAC1C,gBAAIA,MAAM,KAAKC,SAAf,EAA0B;AACtB;AACH,aAFD,MAEO,IAAID,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACtB,oBAAI,CAAC1B,IAAL,GAAY0B,MAAM,CAAC1B,IAAnB;AACA,oBAAI,CAACC,MAAL,GAAcyB,MAAM,CAACzB,MAArB;AACA,oBAAI,CAACC,QAAL,GAAgBwB,MAAM,CAACF,OAAvB;;AACA,oBAAI,CAACnB,cAAL,CAAoBQ,GAApB,CAAwBQ,OAAxB,EAAiCH,UAAjC,CAA4C,MAAI,CAACU,OAAL,EAA5C;AACH;AACJ,WATD;AAUA,iBAAO,KAAP;AACH;;;mCACU;AACP,cAAI1C,KAAK,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKmB,cAAL,CAAoBW,KAAzB,CAAZ;AACA9B,eAAK,GAAG,uFAAiBA,KAAjB,CAAR;AACAA,eAAK,CAAC2C,QAAN,GAAiB3C,KAAK,CAAC2C,QAAN,GAAkB,CAAlB,GAAqB,CAAtC;AACA3C,eAAK,CAAC4C,UAAN,GAAkB,4DAAlB;AACA5C,eAAK,CAAC6C,QAAN,GAAgB,4DAAhB;AACA,eAAK3B,YAAL,CAAkB4B,IAAlB,CAAuB9C,KAAvB;AACH;;;;MAjFwC,oF;;;uBAAhCQ,uB,EAAuB,sI,EAAA,gEAUpB,wEAVoB,C,EAUL,4J,EAAA,mI,EAAA,uH;AAAA,K;;;YAVlBA,uB;AAAuB,2C;AAAA;AAAA;AAAA,O;AAAA,0F;AAAA,e;AAAA,c;AAAA,ixD;AAAA;AAAA;AC9BpC;;AACI;;AACI;;AAKI;;AAKI;;AAOI;;AACJ;;AACA;;AAOI;;AACJ;;AACJ;;AACA;;AAEI;AAAA,mBAAS,IAAAC,YAAA,QAAT;AAA6B,WAA7B;;AAGA;;AAAU;;AAAK;;AACnB;;AACJ;;AACJ;;AAEA;;AACI;;AAQA;;AACI;;AAMI;AAAA,mBAAY,IAAAsC,QAAA,EAAZ;AAAsB,WAAtB;;AAIA;;AAQI;;AACI;;AAGK;;AAAW;;AAEpB;;AACA;;AAKI;;AAAW;;AAAQ;;AACnB;;AACI;;AAMJ;;AACA;;AACK;;AAAS;;AAEd;;AACI;;AAGJ;;AACJ;;AACA;;AAKI;;AAAW;;AAAU;;AACrB;;AACA;;AACI;AAAA,mBAAS,IAAAC,UAAA,CAAW,WAAX,CAAT;AAAgC,WAAhC;;AAIC;;AAAe;;AAEpB;;AACI;;AAGJ;;AACJ;;AACA;;AAKI;;AAAW;;AAAQ;;AACnB;;AACA;;AACI;AAAA,mBAAS,IAAAA,UAAA,CAAW,SAAX,CAAT;AAA8B,WAA9B;;AAIC;;AAAe;;AAEpB;;AACI;;AAGJ;;AACJ;;AAEA;;AAKI;;AAAW;;AAAO;;AAClB;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;AAEA;;AAMI;;AAGI;AAAA,mBAAS,IAAAvC,YAAA,QAAT;AAA6B,WAA7B;;AAIA;;AACJ;;AACA;;AACA;;AAOI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA1KoB;;AAAA;;AASA;;AAAA;;AAoBR;;AAAA;;AAgBI;;AAAA;;AAyBgB;;AAAA;;AAWA;;AAAA;;AAoBA;;AAAA;;AAoBA;;AAAA;;AAcA;;AAAA;;AAyBR;;AAAA;;;;;;;mBDnJR;;;;;;sEAGHD,uB,EAAuB;cAPnC,uDAOmC;eAPzB;AACPyC,kBAAQ,EAAE,sBADH;AAEPC,qBAAW,EAAE,mCAFN;AAGPC,mBAAS,EAAE,CAAC,mCAAD,CAHJ;AAIPC,oBAAU,EAAE,+DAJL;AAKPC,uBAAa,EAAE,gEAAkBC;AAL1B,S;AAOyB,Q;;;;;;kBAU3B,oD;mBAAO,wE;;;;;;;;;;;gBAJX;;;;;;;;;;;;;;;;;;;;AEpCL;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S,GAAb;AAAA;;AAII,WAAAC,UAAA,GAAkB,IAAIC,IAAJ,EAAlB;AACA,WAAAC,UAAA,GAAmB,IAAID,IAAJ,EAAnB;AAGH,K","file":"default~leave-leave-module~working-day-working-day-module-es5.js","sourcesContent":["import { BaseModel } from '@shared/models/base.model';\r\n\r\nexport class WorkingDay extends BaseModel{\r\n    weekday:string;\r\n    startTime:string;\r\n    endTime:string;\r\n    fullDay:boolean;\r\n    remarks:string;\r\n    description:string;\r\n    status:string;\r\n}","import { URI } from '@shared/constants/app.constants';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { NetworkService } from \"@shared/services/network/network.service\";\r\nimport { WorkingDay } from '../models/working-week.model';\r\nimport { Holiday } from '../models/holiday.model';\r\nimport { Leave } from '../models/leave.model';\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class CalendarService {\r\n    constructor(private _networkService: NetworkService) {}\r\n\r\n    getWorkingDays() {\r\n        return this._networkService.getAll(URI.WORKING_DAYS);\r\n    }\r\n \r\n    createWorkingDay(model: WorkingDay) {\r\n        return this._networkService.post(URI.WORKING_DAYS, model);\r\n    }\r\n    editWorkingDay(id: string, model: WorkingDay) {\r\n        return this._networkService.onUpdate(`${URI.WORKING_DAYS}/${id}`, model);\r\n    }\r\n    deleteWorkingDay(id: string) {\r\n        return this._networkService.onDelete(`${URI.WORKING_DAYS}/${id}`);\r\n    }\r\n\r\n    getHolidays() {\r\n        return this._networkService.getAll(URI.HOLIDAYS);\r\n    }\r\n    createHoliday(model: Holiday) {\r\n        return this._networkService.post(URI.HOLIDAYS, model);\r\n    }\r\n    editHoliday(id: string, model: Holiday) {\r\n        return this._networkService.onUpdate(`${URI.HOLIDAYS}/${id}`, model);\r\n    }\r\n    deleteHoliday(id: string) {\r\n        return this._networkService.onDelete(`${URI.HOLIDAYS}/${id}`);\r\n    }\r\n\r\n\r\n    getLeaves() {\r\n        return this._networkService.getAll(URI.LEAVES);\r\n    }\r\n    createLeave(model: Leave) {\r\n        return this._networkService.post(URI.LEAVES, model);\r\n    }\r\n    editLeave(id: string, model: Leave) {\r\n        return this._networkService.onUpdate(`${URI.LEAVES}/${id}`, model);\r\n    }\r\n    deleteLeave(id: string) {\r\n        return this._networkService.onDelete(`${URI.LEAVES}/${id}`);\r\n    }\r\n}\r\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Injector,\n    OnInit,\n    Output,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport {\n    MatDialog,\n    MatDialogRef,\n    MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { WorkingDay } from \"@feature/calender/models/working-week.model\";\nimport { CalendarService } from \"@feature/calender/services/calendar.service\";\nimport { fuseAnimations } from \"@fuse/animations\";\nimport { BaseComponent } from \"@shared/components/base/base.component\";\nimport { WTimeDialogComponent } from \"@shared/components/time-control/w-time-dialog.component\";\nimport { WORKING_DAYS } from \"@shared/constants/app.constants\";\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\n\n@Component({\n    selector: \"app-working-day-form\",\n    templateUrl: \"./working-day-form.component.html\",\n    styleUrls: [\"./working-day-form.component.scss\"],\n    animations: fuseAnimations,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class WorkingDayFormComponent extends BaseComponent implements OnInit {\n    workingDayForm: FormGroup;\n    private hour = 10;\n    private minute = 25;\n    private meridien = \"PM\";\n    workingDaysList: any[] = WORKING_DAYS;\n    @Output() sendResponse: EventEmitter<WorkingDay> = new EventEmitter<any>();\n\n    constructor(\n        public matDialogRef: MatDialogRef<WorkingDayFormComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: WorkingDay,\n        private _service: CalendarService,\n        private dialog: MatDialog,\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.workingDayForm = new FormGroup({\n            id: new FormControl(this.data.id),\n            startTime: new FormControl(this.data.startTime, [\n                Validators.required,\n            ]),\n            endTime: new FormControl(this.data.endTime, [Validators.required]),\n            fullDay: new FormControl(this.data.fullDay),\n            remarks: new FormControl(this.data.remarks, [Validators.required]),\n            weekDay: new FormControl(this.data.weekday, [Validators.required]),\n        });\n        this.workingDayForm.get(\"fullDay\").valueChanges.subscribe((value) => {\n            if (value) {\n                this.workingDayForm.get(\"startTime\").disable();\n                this.workingDayForm.get(\"endTime\").disable();\n                this.workingDayForm.patchValue({\n                    startTime: null,\n                    endTime: null,\n                });\n            } else {\n                this.workingDayForm.get(\"startTime\").enable();\n                this.workingDayForm.get(\"endTime\").enable();\n                this.workingDayForm\n                    .get(\"startTime\")\n                    .setValidators(Validators.required);\n                this.workingDayForm\n                    .get(\"endTime\")\n                    .setValidators(Validators.required);\n            }\n        });\n    }\n\n    public getTime(): string {\n        return `${this.hour}:${this.minute} ${this.meridien}`;\n    }\n    public showPicker(control) {\n        let dialogRef = this.dialog.open(WTimeDialogComponent, {\n            data: {\n                hour: this.hour,\n                minute: this.minute,\n                meriden: this.meridien,\n            },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result === undefined) {\n                return;\n            } else if (result !== -1) {\n                this.hour = result.hour;\n                this.minute = result.minute;\n                this.meridien = result.meriden;\n                this.workingDayForm.get(control).patchValue(this.getTime());\n            }\n        });\n        return false;\n    }\n    onSubmit() {\n        let model = { ...this.workingDayForm.value };\n        model = camelToSnakeCase(model);\n        model.full_day = model.full_day  ? 1: 0;\n        model.start_time =\"Mon Sep 07 2020 15:10:10 GMT+0500 (Pakistan Standard Time)\";\n        model.end_time =\"Mon Sep 07 2020 15:10:10 GMT+0500 (Pakistan Standard Time)\";\n        this.sendResponse.emit(model);\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar class=\"mat-accent m-0\">\n        <mat-toolbar-row\n            fxFlex\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <div\n                class=\"logo mb-24 mb-md-0\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"start center\"\n            >\n                <mat-icon\n                    class=\"logo-icon mr-12\"\n                    [@animate]=\"{\n                        value: '*',\n                        params: { delay: '50ms', scale: '0.2' }\n                    }\"\n                >\n                    perm_contact_calendar\n                </mat-icon>\n                <span\n                    class=\"logo-text\"\n                    [@animate]=\"{\n                        value: '*',\n                        params: { delay: '100ms', x: '-25px' }\n                    }\"\n                >\n                    Add Working Day\n                </span>\n            </div>\n            <button\n                mat-icon-button\n                (click)=\"matDialogRef.close()\"\n                aria-label=\"Close dialog\"\n            >\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\n        <div\n            *ngIf=\"responseMessage.length > 0\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"center\"\n            class=\"p-16  message-box {{ errorType }} \"\n        >\n            {{ responseMessage }}\n        </div>\n        <div fxLayout=\"row\">\n            <form\n                class=\"p-24 mr-24\"\n                fxLayout=\"column\"\n                fxLayoutAlign=\"start\"\n                fxFlex=\"1 0\"\n                name=\"workingDayForm\"\n                (ngSubmit)=\"onSubmit()\"\n                novalidate\n                [formGroup]=\"workingDayForm\"\n            >\n                <div\n                    fxLayout=\"row wrap\"\n                    fxLayout.lt-lg=\"column\"\n                    fxLayoutAlign.lt-lg=\"center\"\n                    fxLayoutGap=\"10px\"\n                    fxLayoutAlign=\"start center\"\n                    fxFlex=\"1 1 auto\"\n                >\n                    <div fxFlex=\"100\" class=\"pr-4 margin\">\n                        <mat-checkbox\n                            formControlName=\"fullDay\"\n                            class=\"example-margin\"\n                            >Is Full Day</mat-checkbox\n                        >\n                    </div>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pr-4\"\n                    >\n                        <mat-label>Week Day</mat-label>\n                        <mat-select formControlName=\"weekDay\">\n                            <mat-option\n                                *ngFor=\"let item of workingDaysList\"\n                                [value]=\"item.id\"\n                            >\n                                {{ item.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-icon matSuffix class=\"secondary-text\"\n                            >lock_open</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('weekDay')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pr-4\"\n                    >\n                        <mat-label>Start Time</mat-label>\n                        <input matInput formControlName=\"startTime\" />\n                        <mat-icon\n                            (click)=\"showPicker('startTime')\"\n                            matSuffix\n                            class=\"secondary-text hover\"\n                            style=\"cursor: pointer\"\n                            >arrow_drop_down</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('startTime')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pl-4\"\n                    >\n                        <mat-label>End Time</mat-label>\n                        <input matInput formControlName=\"endTime\" />\n                        <mat-icon\n                            (click)=\"showPicker('endTime')\"\n                            matSuffix\n                            class=\"secondary-text hover\"\n                            style=\"cursor: pointer\"\n                            >arrow_drop_down</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('endTime')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"100\"\n                        class=\"pl-4\"\n                    >\n                        <mat-label>Remarks</mat-label>\n                        <textarea matInput formControlName=\"remarks\"></textarea>\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('remarks')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div\n                    class=\"actions\"\n                    fxLayoutGap=\"10px\"\n                    fxLayout=\"row\"\n                    fxLayoutAlign=\"end center\"\n                >\n                    <button\n                        type=\"button\"\n                        mat-raised-button\n                        (click)=\"matDialogRef.close()\"\n                        color=\"secondary\"\n                        aria-label=\"Follow\"\n                    >\n                        Cancel\n                    </button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button\n                        type=\"submit\"\n                        mat-raised-button\n                        [disabled]=\"workingDayForm.invalid\"\n                        color=\"accent\"\n                        aria-label=\"Send Message\"\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","export class BaseModel {\r\n    id: string;\r\n    status: string;\r\n\r\n    created_on?: Date=new Date();\r\n    updated_on?:  Date=new Date();;\r\n    created_by?: string;\r\n    updated_by?: string;\r\n}\r\n\r\n\r\n"]}