{"version":3,"sources":["webpack:///src/app/features/referrals/components/referrals.component.ts","webpack:///src/app/features/referrals/components/referrals.component.html","webpack:///src/app/features/referrals/referrals-routing.module.ts","webpack:///src/app/features/referrals/referrals.module.ts"],"names":["ReferralsComponent","_matDialog","injector","pageSize","PAGE_SIZE","pageSizeOptions","PAGE_SIZE_OPTIONS","displayedColumns","dataSource","username","initSearch","valueChanges","subscribe","text","data","paginator","sort","selector","templateUrl","styleUrls","animations","encapsulation","None","static","routes","path","redirectTo","component","ReferralsRoutingModule","forChild","imports","exports","ReferralsModule","declarations"],"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","file":"referrals-referrals-module-es5.js","sourcesContent":["import { BaseComponent } from '@shared/components/base/base.component';\r\nimport { CONFIG } from '../../../config';\r\nimport { Component, OnInit, ViewEncapsulation, ViewChild, Injector } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {\r\n  camelToSentenceCase,\r\n  camelToSnakeCaseText,\r\n  snakeToCamelObject,\r\n  removeRandom,\r\n} from '@shared/helpers/global.helper';\r\nimport {\r\n  ConfirmDialogModel,\r\n  ConfirmDialogComponent,\r\n} from '@shared/components/confirm-dialog/confirm-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-referrals',\r\n  templateUrl: './referrals.component.html',\r\n  styleUrls: ['./referrals.component.scss'],\r\n  animations: fuseAnimations,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ReferralsComponent extends BaseComponent implements OnInit {\r\n  dialogRef: any;\r\n  userPermissions: any[];\r\n  username: FormControl;\r\n  pageSize: number = CONFIG.PAGE_SIZE;\r\n  pageSizeOptions: Array<number> = CONFIG.PAGE_SIZE_OPTIONS;\r\n\r\n  displayedColumns = [\r\n    'RIM No. of Referred Customer',\r\n    'Name of Referred Custome',\r\n    'RIM of Referring Customer',\r\n    'Name of Referring Customer',\r\n    'Date of Jazeel Registration',\r\n    'Customer opened account',\r\n    'Date of account opening',\r\n    'Referred Customer Email',\r\n    'Referred Customer Mobile No.',\r\n    'Referring Customer email',\r\n    'Referring customer mobile no.'\r\n  ];\r\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  constructor(public _matDialog: MatDialog, injector: Injector) {\r\n    super(injector);\r\n  }\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.username = new FormControl('');\r\n    this.initSearch();\r\n  }\r\n  initSearch(): void {\r\n    this.username.valueChanges.subscribe((text: string) => {\r\n    });\r\n  }\r\n  camelToSnakeCase(text): void {\r\n    return camelToSnakeCaseText(text);\r\n  }\r\n  camelToSentenceCase(text): void {\r\n    return camelToSentenceCase(text);\r\n  }\r\n  updateGrid(data): void {\r\n    this.dataSource.data = data;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<div class=\"page-container page-layout carded fullwidth inner-scroll\">\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row\"\r\n            fxLayoutAlign.gt-sm=\"space-between center\">\r\n            <!-- TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    refresh\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Referrals\r\n                </span>\r\n            </div>\r\n            <!-- / TITLE -->\r\n            <!-- ADD BUTTON -->\r\n            <button mat-raised-button color=\"accent\" class=\"add-product-button fuse-white mt-24 mt-md-0\">\r\n                <span>DOWNLOAD REPORT</span>\r\n            </button>\r\n            <!-- / ADD BUTTON -->\r\n        </div>\r\n        <!-- / HEADER -->\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" fusePerfectScrollbar>\r\n            <!-- <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\r\n                <mat-spinner></mat-spinner>\r\n            </div> -->\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <mat-table #table matSort matSortActive=\"username\" matSortDirection=\"asc\" matSortDisableClear\r\n                [dataSource]=\"dataSource\">\r\n                <!-- COLUMNS AND ROWS-->\r\n                <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n                    }\r\n                    <mat-header-cell class=\"text-center\" *matHeaderCellDef>\r\n                        {{ key.includes('action') ? 'Action' : camelToSentenceCase(key) }}</mat-header-cell>\r\n\r\n                    <mat-cell *matCellDef=\"let element; let i = dataIndex\">\r\n\r\n                        <span *ngIf=\"!key.includes('action'); else action\">\r\n                            <span *ngIf=\"element[camelToSnakeCase(key)]; else defaultText\">\r\n                                <ng-container *ngIf=\"camelToSnakeCase(key).indexOf('created')<0; else date \">\r\n                                    {{element[camelToSnakeCase(key)]}}\r\n                                </ng-container>\r\n\r\n                            </span>\r\n                        </span>\r\n\r\n                        <ng-template #defaultText>\r\n                            <app-default-text></app-default-text>\r\n                        </ng-template>\r\n\r\n                        <ng-template #action>\r\n                            <mat-icon appPermission [permissions]=\"userPermissions\" matTooltip=\"Delete user\"\r\n                                [type]=\"'delete'\" color=\"warn\" type=\"button\"\r\n                                (click)=\" confirmDialog('delete',element['id'])\">delete</mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"openDialog(element)\" matTooltip=\"Delete user\">mode_edit\r\n                            </mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"onDetail(element['id'])\" matTooltip=\"Explore\">explore\r\n                            </mat-icon>\r\n                            <mat-icon *ngIf=\"element['status']==='PENDING'\" color=\"success\"\r\n                                matTooltip=\"Resend Invitation\" type=\"button\"\r\n                                (click)=\" confirmDialog('invite',element['id'])\">near_me</mat-icon> &nbsp;&nbsp;\r\n                        </ng-template>\r\n                        <ng-template #date>\r\n                            {{element[camelToSnakeCase(key)] | date:'mediumDate'}}\r\n                        </ng-template>\r\n\r\n                    </mat-cell>\r\n                </ng-container>\r\n                <!-- -->\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n                </mat-row>\r\n\r\n            </mat-table>\r\n            <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"pageSize\" showFirstLastButtons\r\n                [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReferralsComponent } from './components/referrals.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '', component: ReferralsComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ReferralsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReferralsRoutingModule } from './referrals-routing.module';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MaterialModule } from '@shared/modules/material/material.module';\r\nimport { ReferralsComponent } from './components/referrals.component';\r\n\r\n@NgModule({\r\n    declarations: [ReferralsComponent],\r\n    imports: [CommonModule, \r\n        ReferralsRoutingModule,\r\n        SharedModule,\r\n        FuseSharedModule,\r\n        MaterialModule\r\n    ]})\r\nexport class ReferralsModule {}\r\n"]}