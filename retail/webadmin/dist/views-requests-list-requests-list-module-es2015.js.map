{"version":3,"sources":["./src/app/features/service-requests/views/requests-list/requests-list-routing.module.ts","./src/app/features/service-requests/views/requests-list/requests-list.component.ts","./src/app/features/service-requests/views/requests-list/requests-list.component.html","./src/app/features/service-requests/views/requests-list/requests-list.module.ts"],"names":[],"mappings":"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","file":"views-requests-list-requests-list-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RequestsListComponent } from './requests-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: RequestsListComponent\r\n      \r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RequestListRoutingModule { }\r\n","import { BaseComponent } from '@shared/components/base/base.component';\r\nimport { CONFIG } from '../../../../config';\r\nimport { Component, OnInit, ViewEncapsulation, ViewChild, Injector } from '@angular/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {\r\n  camelToSentenceCase,\r\n  camelToSnakeCaseText,\r\n  snakeToCamelObject,\r\n  removeRandom,\r\n} from '@shared/helpers/global.helper';\r\nimport {\r\n  ConfirmDialogModel,\r\n  ConfirmDialogComponent,\r\n} from '@shared/components/confirm-dialog/confirm-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-requests-list',\r\n  templateUrl: './requests-list.component.html',\r\n  styleUrls: ['./requests-list.component.scss'],\r\n  animations: fuseAnimations,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RequestsListComponent extends BaseComponent implements OnInit {\r\n  dialogRef: any;\r\n  userPermissions: any[];\r\n  username: FormControl;\r\n  pageSize: number = CONFIG.PAGE_SIZE;\r\n  pageSizeOptions: Array<number> = CONFIG.PAGE_SIZE_OPTIONS;\r\n\r\n  displayedColumns = [\r\n    'Request Type',\r\n    'Customer RIM',\r\n    'Customer Mobile',\r\n    'Customer Email',\r\n    'Request Date',\r\n    'Status'\r\n\r\n  ];\r\n\r\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  constructor(public _matDialog: MatDialog, injector: Injector ) {\r\n    super(injector);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.username = new FormControl('');\r\n    this.initSearch();\r\n  }\r\n\r\n\r\n  initSearch(): void {\r\n    this.username.valueChanges.subscribe((text: string) => {\r\n    });\r\n  }\r\n  camelToSnakeCase(text): void {\r\n    return camelToSnakeCaseText(text);\r\n  }\r\n  camelToSentenceCase(text): void {\r\n    return camelToSentenceCase(text);\r\n  }\r\n  confirmDialog(type, id): void {\r\n    const message = type === 'invite' ? removeRandom(MESSAGES.RESEND_INVITE()) : removeRandom(MESSAGES.REMOVE_CONFIRMATION());\r\n    const dialogData = new ConfirmDialogModel('Confirm Action', message);\r\n    const dialogRef = this._matDialog.open(ConfirmDialogComponent, {\r\n      data: dialogData,\r\n      disableClose: true,\r\n      panelClass: 'app-confirm-dialog',\r\n      hasBackdrop: true,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((status) => {\r\n      if (status) {\r\n        //   type === 'invite' ? this.resendInvitation(id) : this.deleteUser(id)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  updateGrid(data): void {\r\n    this.dataSource.data = data;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n","<div   class=\"page-container page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    credit_card\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Service Request Summary\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n            <!-- ADD BUTTON -->\r\n            <button  mat-raised-button color=\"accent\"  class=\"add-product-button fuse-white mt-24 mt-md-0\">\r\n                <span>DOWNLOAD REPORT</span>\r\n            </button>\r\n            <!-- / ADD BUTTON -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" fusePerfectScrollbar>\r\n            <!-- <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\r\n                <mat-spinner></mat-spinner>\r\n            </div> -->\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <mat-table #table matSort matSortActive=\"username\" matSortDirection=\"asc\" matSortDisableClear [dataSource]=\"dataSource\">\r\n                <!-- COLUMNS AND ROWS-->\r\n                <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n}\r\n                    <mat-header-cell class=\"text-center\" *matHeaderCellDef>{{ key.includes('action') ? 'Action' : camelToSentenceCase(key) }}</mat-header-cell>\r\n            \r\n                    <mat-cell *matCellDef=\"let element; let i = dataIndex\" >\r\n                       \r\n                        <span *ngIf=\"!key.includes('action'); else action\">\r\n                            <span *ngIf=\"element[camelToSnakeCase(key)]; else defaultText\">\r\n                                <ng-container  *ngIf=\"camelToSnakeCase(key).indexOf('created')<0; else date \"  >\r\n                                    {{element[camelToSnakeCase(key)]}}\r\n                                </ng-container>\r\n                            \r\n                            </span>\r\n                        </span>\r\n                        \r\n                        <ng-template #defaultText>\r\n                            <app-default-text></app-default-text>\r\n                        </ng-template>\r\n                        \r\n                        <ng-template #action>\r\n                            <mat-icon appPermission [permissions]=\"userPermissions\" matTooltip=\"Delete user\" [type]=\"'delete'\" color=\"warn\" type=\"button\" (click)=\" confirmDialog('delete',element['id'])\">delete</mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"openDialog(element)\" matTooltip=\"Delete user\">mode_edit</mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"onDetail(element['id'])\" matTooltip=\"Explore\">explore</mat-icon>\r\n                            <mat-icon  *ngIf=\"element['status']==='PENDING'\"  color=\"success\"  matTooltip=\"Resend Invitation\" type=\"button\" (click)=\" confirmDialog('invite',element['id'])\">near_me</mat-icon> &nbsp;&nbsp;\r\n                        </ng-template>\r\n                        <ng-template #date>\r\n                            {{element[camelToSnakeCase(key)] | date:'mediumDate'}}\r\n                        </ng-template>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <!-- -->\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n                </mat-row>\r\n            \r\n            </mat-table>\r\n            <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"pageSize\" showFirstLastButtons [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RequestListRoutingModule } from './requests-list-routing.module';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MaterialModule } from '@shared/modules/material/material.module';\r\nimport { RequestsListComponent } from './requests-list.component';\r\n\r\n@NgModule({\r\n    declarations: [RequestsListComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        FuseSharedModule,\r\n        RequestListRoutingModule,\r\n        MaterialModule\r\n    ],\r\n})\r\nexport class RequestsListModule {}\r\n"],"sourceRoot":"webpack:///"}