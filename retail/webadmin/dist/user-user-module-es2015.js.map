{"version":3,"sources":["./src/app/features/entitlement/models/user.model.ts","./src/app/features/entitlement/user/components/detail-item/detail-item.component.ts","./src/app/features/entitlement/user/components/detail-item/detail-item.component.html","./src/app/features/entitlement/user/components/user-detail/user-detail.component.ts","./src/app/features/entitlement/user/components/user-detail/user-detail.component.html","./src/app/features/entitlement/user/components/user-form/user-form.component.ts","./src/app/features/entitlement/user/components/user-form/user-form.component.html","./src/app/features/entitlement/user/services/user.service.ts","./src/app/features/entitlement/user/user-routing.module.ts","./src/app/features/entitlement/user/user.module.ts","./src/app/features/entitlement/user/views/user/user.component.ts","./src/app/features/entitlement/user/views/user/user.component.html","./src/app/shared/models/base.model.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["import { Role } from \"./role.model\";\r\nimport { BaseModel } from '@shared/models/base.model';\r\n\r\nexport class User extends BaseModel {\r\n    username: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    middleName: string;\r\n    contactNo: string;\r\n    dateOfBirth: string;\r\n    nationalityId: string;\r\n    email: string;\r\n    roles: Array<Role> = [];\r\n    gender: string;\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\n\r\n@Component({\r\n    selector: \"app-detail-item\",\r\n    templateUrl: \"./detail-item.component.html\",\r\n    styleUrls: [\"./detail-item.component.scss\"],\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class DetailItemComponent implements OnInit {\r\n    @Input() module;\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n}\r\n","\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\r\n\r\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\r\n\r\n            <div class=\"title\">\r\n                <strong>Module:</strong>    <span style=\"margin-left: 50px;\">{{module.name}}</span>\r\n            </div>\r\n\r\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" >\r\n                <div class=\"title\" fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"padding-top: 5px;\">\r\n                   <strong>Permissions:  &nbsp; &nbsp;</strong>\r\n                </div>\r\n                <ng-container *ngFor=\"let p of module.permissions\">\r\n                    <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" style=\"background-color: rgba(0, 0, 0, 0.08)\">\r\n                        <div class=\"tag-color\"  style=\"background-color: rgb(56, 142, 60);\"></div>\r\n                        <div class=\"tag-label\">{{p.record_type}}</div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Component, OnInit, ViewEncapsulation, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { fuseAnimations } from '@fuse/animations';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.scss'],\r\n  animations: fuseAnimations,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n  constructor(\r\n    public matDialogRef: MatDialogRef<UserDetailComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n) {\r\n}\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon mr-12\" [@animate]=\"{\r\n                        value: '*',\r\n                        params: { delay: '50ms', scale: '0.2' }\r\n                    }\">\r\n                    person\r\n                </mat-icon>\r\n                <span *ngIf=\"data.firstName || data.lastName; else defaultText\" class=\"logo-text\" [@animate]=\"{\r\n                        value: '*',\r\n                        params: { delay: '100ms', x: '-25px' }\r\n                    }\">\r\n                    {{data.firstName +' ' + data.lastName}}\r\n                </span>\r\n                <ng-template #defaultText>\r\n                    <app-default-text></app-default-text>\r\n                </ng-template>\r\n            </div>\r\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n        <div fxLayout=\"row wrap\" fxLayout.lt-lg=\"column\" fxLayoutAlign.lt-lg=\"center\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\" fxFlex=\"1 1 auto\">\r\n          \r\n            <div *ngIf=\"data.modules.length < 1\" fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"p-16 full-width\">\r\n                This user does not have a module assigned.\r\n            </div>\r\n            <ng-container *ngFor=\"let module of data.modules\">\r\n            <app-detail-item [module]=\"module\" ></app-detail-item>\r\n           </ng-container>\r\n           \r\n        </div>\r\n    </div>\r\n</div>","import {\r\n    NATIONALITY_LIST,\r\n    STATUS_LIST,\r\n    GENDER_LIST,\r\n    MODULES,\r\n} from \"@shared/constants/app.constants\";\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    ViewEncapsulation,\r\n    Inject,\r\n    EventEmitter,\r\n    Output,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { User } from \"@feature/entitlement/models/user.model\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { ValidatorService } from \"@shared/services/validator-service/validator.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n    selector: \"app-user-form\",\r\n    templateUrl: \"./user-form.component.html\",\r\n    styleUrls: [\"./user-form.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class UserFormComponent extends BaseComponent implements OnInit {\r\n    userForm: FormGroup;\r\n\r\n    response: User;\r\n    roles: Role[];\r\n    permissions: any[];\r\n    nationalityList: any[];\r\n    genderList: any[] = GENDER_LIST;\r\n    statusList: any[] = STATUS_LIST;\r\n    @Output() sendResponse: EventEmitter<User> = new EventEmitter<any>();\r\n  \r\n\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<UserFormComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        injector: Injector\r\n    ) {\r\n        super(injector, MODULES.USER_MANAGEMENT);\r\n    }\r\n    requiredIfUpdating(predicate) {\r\n        return (formControl) => {\r\n            if (!formControl.parent) {\r\n                return null;\r\n            }\r\n            if (predicate()) {\r\n                return Validators.required(formControl);\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n    ngOnInit(): void {\r\n        this._unsubscribeAll = new Subject();\r\n        this._errorEmitService.currentMessage\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((item) => {\r\n                this.errorType = item.type;\r\n                this.responseMessage = item.message;\r\n            });\r\n        this.userForm = new FormGroup({\r\n            id: new FormControl(this.data.user.id),\r\n            username: new FormControl(this.data.user.username, [\r\n                this.requiredIfUpdating(() => !this.userForm.get(\"id\").value),\r\n            ]),\r\n            firstName: new FormControl(this.data.user.firstName, [\r\n                this.requiredIfUpdating(() => this.userForm.get(\"id\").value),\r\n            ]),\r\n            middleName: new FormControl(this.data.user.middleName),\r\n            lastName: new FormControl(this.data.user.lastName, [\r\n                this.requiredIfUpdating(() => this.userForm.get(\"id\").value),\r\n            ]),\r\n            contactNo: new FormControl(\r\n                {\r\n                    value: this.data.user.contactNo,\r\n                    disabled: this.data.user.id ? true : false,\r\n                },\r\n                [ValidatorService.numbersOnly]\r\n            ),\r\n            gender: new FormControl(this.data.user.gender, [\r\n                this.requiredIfUpdating(() => this.userForm.get(\"id\").value),\r\n            ]),\r\n            email: new FormControl(\r\n                {\r\n                    value: this.data.user.email,\r\n                    disabled: this.data.user.id ? true : false,\r\n                },\r\n                [Validators.required, Validators.email]\r\n            ),\r\n            dateOfBirth: new FormControl({\r\n                value: this.data.user.dateOfBirth\r\n                    ? new Date(this.data.user.dateOfBirth)\r\n                    : null,\r\n                disabled: this.data.user.id ? true : false,\r\n            }),\r\n            nationalityId: new FormControl({\r\n                value: this.data.user.nationalityId,\r\n                disabled: this.data.user.id ? true : false,\r\n            }),\r\n            roles: new FormControl(\r\n                this.data.user.roles.map((x) => x.id),\r\n                [Validators.required]\r\n            ),\r\n        });\r\n        this.roles = this.data.roles;\r\n        this.nationalityList= this.data.nationalities;\r\n    }\r\n   \r\n    isExist(roles, roleId) {\r\n        return roles.find((x) => x == roleId);\r\n    }\r\n    onSubmit() {\r\n        let model = { ...this.userForm.value };\r\n        model.roles = this.userForm.value.roles.map((item) => ({\r\n            id: item,\r\n        }));\r\n        if (model.id && model.id.length > 0) {\r\n            this.data.user.roles.forEach((item) => {\r\n                const isExist = this.isExist(model.roles, item.id);\r\n                if (!isExist) model.roles.push({ id: item.id, _deleted: true });\r\n            });\r\n        }\r\n        model = camelToSnakeCase(model);\r\n\r\n        this.sendResponse.emit(model);\r\n    }\r\n  \r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n            <div\r\n                class=\"logo mb-24 mb-md-0\"\r\n                fxLayout=\"row\"\r\n                fxLayoutAlign=\"start center\"\r\n            >\r\n                <mat-icon\r\n                    class=\"logo-icon mr-12\"\r\n                    [@animate]=\"{\r\n                        value: '*',\r\n                        params: { delay: '50ms', scale: '0.2' }\r\n                    }\"\r\n                >\r\n                    people\r\n                </mat-icon>\r\n                <span\r\n                    class=\"logo-text\"\r\n                    [@animate]=\"{\r\n                        value: '*',\r\n                        params: { delay: '100ms', x: '-25px' }\r\n                    }\"\r\n                >\r\n                    {{ data.user.id ? \"Edit\" : \"Create\" }} User\r\n                </span>\r\n            </div>\r\n            <button\r\n                mat-icon-button\r\n                (click)=\"matDialogRef.close()\"\r\n                aria-label=\"Close dialog\"\r\n            >\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n        <app-message-box\r\n            [type]=\"errorType\"\r\n            [message]=\"responseMessage\"\r\n        ></app-message-box>\r\n        <div fxLayout=\"row\">\r\n            <form\r\n                class=\"p-24\"\r\n                fxLayout=\"column\"\r\n                fxLayoutAlign=\"start\"\r\n                fxFlex=\"1 0\"\r\n                name=\"userForm\"\r\n                (ngSubmit)=\"onSubmit()\"\r\n                novalidate\r\n                [formGroup]=\"userForm\"\r\n            >\r\n                <div\r\n                    fxLayout=\"row wrap\"\r\n                    fxLayout.lt-lg=\"column\"\r\n                    fxLayoutAlign.lt-lg=\"center\"\r\n                    fxLayoutGap=\"10px\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    fxFlex=\"1 1 auto\"\r\n                >\r\n                    <mat-form-field\r\n                        *ngIf=\"!data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>User Name <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"username\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >personal_pin</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('username')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                        *ngIf=\"data.user.id\"\r\n                    >\r\n                        <mat-label>First Name <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"firstName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('firstName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Middle Name</mat-label>\r\n                        <input matInput formControlName=\"middleName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('middleName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Last Name <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"lastName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('lastName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Email <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"email\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >email</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('email')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Contact No <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"contactNo\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >phone</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('contactNo')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>Role <app-required-indicator></app-required-indicator></mat-label>\r\n                        <mat-select formControlName=\"roles\" multiple>\r\n                            <mat-option\r\n                                *ngFor=\"let role of roles\"\r\n                                [value]=\"role.id\"\r\n                            >\r\n                                {{ role.name }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >security</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('roles')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Date of Birth <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input\r\n                            matInput\r\n                            [matDatepicker]=\"picker\"\r\n                            formControlName=\"dateOfBirth\"\r\n                        />\r\n                        <mat-datepicker-toggle\r\n                            matSuffix\r\n                            [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('dateOfBirth')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>Gender <app-required-indicator></app-required-indicator></mat-label>\r\n                        <mat-select formControlName=\"gender\">\r\n                            <mat-option\r\n                                *ngFor=\"let item of genderList\"\r\n                                [value]=\"item.id\"\r\n                            >\r\n                                {{ item.name }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >face</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('gender')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        *ngIf=\"data.user.id\"\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>Nationality <app-required-indicator></app-required-indicator></mat-label>\r\n                        <mat-select formControlName=\"nationalityId\">\r\n                            <mat-option\r\n                                *ngFor=\"let item of nationalityList\"\r\n                                [value]=\"item.id\"\r\n                            >\r\n                                {{ item.nationality }}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >outlined_flag</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('nationalityId')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div\r\n                    class=\"actions\"\r\n                    fxLayoutGap=\"10px\"\r\n                    fxLayout=\"row\"\r\n                    fxLayoutAlign=\"end center\"\r\n                >\r\n                    <button\r\n                        type=\"button\"\r\n                        mat-raised-button\r\n                        (click)=\"matDialogRef.close()\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"Follow\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        [disabled]=\"userForm.invalid\"\r\n                        class=\"submit-button\"\r\n                        mat-raised-button\r\n                        color=\"accent\"\r\n                        aria-label=\"Send Message\"\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { URI } from '@shared/constants/app.constants';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\nimport { User } from \"../../models/user.model\";\r\nimport { NetworkService } from '@shared/services/network/network.service';\r\nimport { ReferenceService } from '@shared/services/reference/reference.service';\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n    modules: Array<any> = [];\r\n    constructor(private _networkService: NetworkService, private _refService: ReferenceService) {}\r\n    createUser(user: User) {\r\n        return this._networkService.post(URI.USER_INVITATION, user);\r\n    }\r\n    resendInvite(id:string) {\r\n        return this._networkService.post(`${URI.USER_INVITATION}/${id}/resend`,{});\r\n    }\r\n    getUserById(id: string) {\r\n        return this._networkService.getById(`${URI.USER}/${id}`);\r\n    }\r\n    getUsers(): Observable<any> {\r\n        return this._networkService.getAll(URI.USER);\r\n    }\r\n    getRoles(): Observable<any> {\r\n        return this._networkService.getAll(URI.ROLE);\r\n    }\r\n    editUser(id: string, model: User) {\r\n        return this._networkService.onUpdate(`${URI.USER}/${id}`, model);\r\n    }\r\n    deleteUser(id: string) {\r\n        return this._networkService.onDelete(`${URI.USER}/${id}`);\r\n    }\r\n    forkUserData() {\r\n        return forkJoin([this.getUsers(), this.getRoles(),this._refService.getCountries()]);\r\n    }\r\n    mapModules(modules) {\r\n        this.modules = [];\r\n        this.makeFlat(modules, \"\");\r\n        return this.modules;\r\n    }\r\n    makeFlat(modules: any[], parent) {\r\n        modules.forEach((item) => {\r\n            item.parent = parent;\r\n            this.modules.push(item);\r\n            if (item.sub_modules) {\r\n                this.makeFlat(item.sub_modules, item.name);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserComponent } from './views/user/user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: UserComponent\r\n      \r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { UserRoutingModule } from \"./user-routing.module\";\r\nimport { UserComponent } from \"./views/user/user.component\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { UserFormComponent } from \"./components/user-form/user-form.component\";\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MaterialModule } from '@shared/modules/material/material.module';\r\nimport { UserDetailComponent } from './components/user-detail/user-detail.component';\r\nimport { DetailItemComponent } from './components/detail-item/detail-item.component';\r\n\r\n@NgModule({\r\n    declarations: [UserComponent, UserFormComponent, UserDetailComponent, DetailItemComponent],\r\n    entryComponents: [UserFormComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        FuseSharedModule,\r\n        UserRoutingModule,\r\n        MaterialModule\r\n    ],\r\n})\r\nexport class UserModule {}\r\n","import { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { CONFIG } from \"@config/index\";\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    ViewEncapsulation,\r\n    ViewChild,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UserFormComponent } from \"../../components/user-form/user-form.component\";\r\n\r\nimport { UserService } from \"../../services/user.service\";\r\nimport { MODULES } from \"@shared/constants/app.constants\";\r\n\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { User } from \"@feature/entitlement/models/user.model\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport {\r\n    camelToSentenceCase,\r\n    camelToSnakeCaseText,\r\n    snakeToCamelObject,\r\n    removeRandom,\r\n} from \"@shared/helpers/global.helper\";\r\nimport {\r\n    ConfirmDialogModel,\r\n    ConfirmDialogComponent,\r\n} from \"@shared/components/confirm-dialog/confirm-dialog.component\";\r\nimport { UserDetailComponent } from \"../../components/user-detail/user-detail.component\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { MESSAGES } from \"@shared/constants/messages.constant\";\r\n\r\n@Component({\r\n    selector: \"app-user\",\r\n    templateUrl: \"./user.component.html\",\r\n    styleUrls: [\"./user.component.scss\"],\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UserComponent extends BaseComponent implements OnInit {\r\n    dialogRef: any;\r\n    users: User[];\r\n    roles: Role[];\r\n    userPermissions: any[];\r\n    pageSize: number = CONFIG.PAGE_SIZE;\r\n    pageSizeOptions: Array<number> = CONFIG.PAGE_SIZE_OPTIONS;\r\n    nationalities: any[];\r\n    displayedColumns = [\"firstName\", \"lastName\", \"email\", \"status\", \"actions\"];\r\n\r\n    dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n\r\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n    constructor(\r\n        public _matDialog: MatDialog,\r\n        private _service: UserService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector, MODULES.USER_MANAGEMENT);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getData();\r\n        // super.ngOnInit();\r\n    }\r\n\r\n    getData() {\r\n        this._service\r\n            .forkUserData()\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    [this.users, this.roles, this.nationalities] = response;\r\n                    this.updateGrid(this.users);\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n\r\n    camelToSnakeCase(text) {\r\n        return camelToSnakeCaseText(text);\r\n    }\r\n    openDialog(data): void {\r\n        var _this = this;\r\n        this.dialogRef = this._matDialog\r\n            .open(UserFormComponent, {\r\n                data: {\r\n                    nationalities: this.nationalities,\r\n                    roles: this.roles,\r\n                    user:\r\n                        data && data.id ? snakeToCamelObject(data) : new User(),\r\n                },\r\n                disableClose: true,\r\n                hasBackdrop: true,\r\n                panelClass: \"app-user-form\",\r\n            })\r\n            .componentInstance.sendResponse.subscribe((response) => {\r\n                if (response.id) {\r\n                    _this.editUser(response);\r\n                } else {\r\n                    _this.createUser(response);\r\n                }\r\n            });\r\n    }\r\n    onDetail(id): void {\r\n        this._service\r\n            .getUserById(id)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.openUserDetailModal(response);\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n    openUserDetailModal(response) {\r\n        response.modules = this._service.mapModules(response.modules);\r\n        response = snakeToCamelObject(response);\r\n        this.dialogRef = this._matDialog.open(UserDetailComponent, {\r\n            data: response,\r\n            panelClass: \"app-user-detail\",\r\n        });\r\n    }\r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n    confirmDialog(type, id): void {\r\n        const message =\r\n            type === \"invite\"\r\n                ? removeRandom(MESSAGES.RESEND_INVITE())\r\n                : removeRandom(MESSAGES.REMOVE_CONFIRMATION());\r\n        const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\r\n        const dialogRef = this._matDialog.open(ConfirmDialogComponent, {\r\n            data: dialogData,\r\n            disableClose: true,\r\n            panelClass: \"app-confirm-dialog\",\r\n            hasBackdrop: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((status) => {\r\n            if (status) {\r\n                type === \"invite\"\r\n                    ? this.resendInvitation(id)\r\n                    : this.deleteUser(id);\r\n            }\r\n        });\r\n    }\r\n    resendInvitation(id) {\r\n        this._service\r\n            .resendInvite(id)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.errorType = \"success\";\r\n                    this.responseMessage = MESSAGES.INVITE_RESENT();\r\n                    this.hideMessage();\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n    createUser(model: User) {\r\n        this._service\r\n            .createUser(model)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    const data = this.dataSource.data;\r\n                    data.unshift(response);\r\n                    this.updateGrid(data);\r\n                    this.errorType = \"success\";\r\n                    this.responseMessage = MESSAGES.CREATED(\"User\");\r\n                    this._matDialog.closeAll();\r\n                    this.hideMessage();\r\n                    this._errorEmitService.emit(\"\", \"\");\r\n                },\r\n                ({ error }) => {\r\n                    if (error.statusCode == 422) {\r\n                        this._errorEmitService.emit(MESSAGES.EXISTS(\"User with this email\"), \"warning\");\r\n                    } else {\r\n                        this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n                    }\r\n                }\r\n            );\r\n    }\r\n    hideMessage() {\r\n        setTimeout(() => {\r\n            this.responseMessage = \"\";\r\n        }, 2000);\r\n    }\r\n    editUser(model: User) {\r\n        this._service\r\n            .editUser(model.id, model)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.errorType = \"success\";\r\n                    this.responseMessage = MESSAGES.UPDATED(\"User\");\r\n                    const index = this.dataSource.data.findIndex(\r\n                        (x) => x.id == model.id\r\n                    );\r\n                    this.hideMessage();\r\n                    this.users[index] = response;\r\n                    this.updateGrid(this.users);\r\n                    this._matDialog.closeAll();\r\n                    this._errorEmitService.emit(\"\", \"\");\r\n                },\r\n                (response) => {\r\n                    this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n                }\r\n            );\r\n    }\r\n    deleteUser(id: string) {\r\n        this._service\r\n            .deleteUser(id)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    const index = this.dataSource.data.findIndex(\r\n                        (x) => x.id == id\r\n                    );\r\n                    this.users.splice(index, 1);\r\n                    this.updateGrid(this.users);\r\n                    this.errorType = \"success\";\r\n                    // this.hideMessage();\r\n                    this.responseMessage = MESSAGES.DELETED(\"User\");\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n    updateGrid(data) {\r\n        this.dataSource.data = data;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n}\r\n","<div   class=\"page-container page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    people\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Users\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper mx-32 mx-md-0\" >\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input  placeholder=\"Search for a user\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n            <!-- ADD BUTTON -->\r\n            <button  mat-raised-button color=\"accent\" (click)=\"openDialog(null)\" class=\"add-product-button fuse-white mt-24 mt-md-0\">\r\n                <span>ADD NEW USER</span>\r\n            </button>\r\n            <!-- / ADD BUTTON -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" fusePerfectScrollbar>\r\n            <!-- <div class=\"spinner-container\" *ngIf=\"dataSource.loading$ | async\">\r\n                <mat-spinner></mat-spinner>\r\n            </div> -->\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <mat-table #table matSort matSortActive=\"username\" matSortDirection=\"asc\" matSortDisableClear [dataSource]=\"dataSource\">\r\n                <!-- COLUMNS AND ROWS-->\r\n                <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n                    <mat-header-cell *matHeaderCellDef>{{ key.includes('action') ? 'Action' : camelToSentenceCase(key) }}</mat-header-cell>\r\n            \r\n                    <mat-cell *matCellDef=\"let element; let i = dataIndex\" >\r\n                       \r\n                        <span *ngIf=\"!key.includes('action'); else action\">\r\n                            <span *ngIf=\"element[camelToSnakeCase(key)]; else defaultText\">\r\n                                <ng-container  *ngIf=\"camelToSnakeCase(key).indexOf('created')<0; else date \"  >\r\n                                    {{element[camelToSnakeCase(key)]}}\r\n                                </ng-container>\r\n                            \r\n                            </span>\r\n                        </span>\r\n                        \r\n                        <ng-template #defaultText>\r\n                            <app-default-text></app-default-text>\r\n                        </ng-template>\r\n                        \r\n                        <ng-template #action>\r\n                            <mat-icon appPermission [permissions]=\"userPermissions\" matTooltip=\"Delete user\" [type]=\"'delete'\" color=\"warn\" type=\"button\" (click)=\" confirmDialog('delete',element['id'])\">delete</mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"openDialog(element)\" matTooltip=\"Delete user\">mode_edit</mat-icon> &nbsp;&nbsp;\r\n                            <mat-icon type=\"button\" (click)=\"onDetail(element['id'])\" matTooltip=\"Explore\">explore</mat-icon>\r\n                            <mat-icon  *ngIf=\"element['status']==='PENDING'\"  color=\"success\"  matTooltip=\"Resend Invitation\" type=\"button\" (click)=\" confirmDialog('invite',element['id'])\">near_me</mat-icon> &nbsp;&nbsp;\r\n                        </ng-template>\r\n                        <ng-template #date>\r\n                            {{element[camelToSnakeCase(key)] | date:'mediumDate'}}\r\n                        </ng-template>\r\n                        \r\n                    </mat-cell>\r\n                </ng-container>\r\n                <!-- -->\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n                </mat-row>\r\n            \r\n            </mat-table>\r\n            <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"pageSize\" showFirstLastButtons [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>","export class BaseModel {\r\n    id: string;\r\n    status: string;\r\n\r\n    created_on?: Date=new Date();\r\n    updated_on?:  Date=new Date();;\r\n    created_by?: string;\r\n    updated_by?: string;\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}