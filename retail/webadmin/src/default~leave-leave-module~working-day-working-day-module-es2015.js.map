{"version":3,"sources":["./src/app/features/calender/models/working-week.model.ts","./src/app/features/calender/services/calendar.service.ts","./src/app/features/calender/working-day/components/working-day-form/working-day-form.component.ts","./src/app/features/calender/working-day/components/working-day-form/working-day-form.component.html","./src/app/shared/models/base.model.ts"],"names":[],"mappings":"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","file":"default~leave-leave-module~working-day-working-day-module-es2015.js","sourcesContent":["import { BaseModel } from '@shared/models/base.model';\r\n\r\nexport class WorkingDay extends BaseModel{\r\n    weekday:string;\r\n    startTime:string;\r\n    endTime:string;\r\n    fullDay:boolean;\r\n    remarks:string;\r\n    description:string;\r\n    status:string;\r\n}","import { URI } from '@shared/constants/app.constants';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { NetworkService } from \"@shared/services/network/network.service\";\r\nimport { WorkingDay } from '../models/working-week.model';\r\nimport { Holiday } from '../models/holiday.model';\r\nimport { Leave } from '../models/leave.model';\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class CalendarService {\r\n    constructor(private _networkService: NetworkService) {}\r\n\r\n    getWorkingDays() {\r\n        return this._networkService.getAll(URI.WORKING_DAYS);\r\n    }\r\n \r\n    createWorkingDay(model: WorkingDay) {\r\n        return this._networkService.post(URI.WORKING_DAYS, model);\r\n    }\r\n    editWorkingDay(id: string, model: WorkingDay) {\r\n        return this._networkService.onUpdate(`${URI.WORKING_DAYS}/${id}`, model);\r\n    }\r\n    deleteWorkingDay(id: string) {\r\n        return this._networkService.onDelete(`${URI.WORKING_DAYS}/${id}`);\r\n    }\r\n\r\n    getHolidays() {\r\n        return this._networkService.getAll(URI.HOLIDAYS);\r\n    }\r\n    createHoliday(model: Holiday) {\r\n        return this._networkService.post(URI.HOLIDAYS, model);\r\n    }\r\n    editHoliday(id: string, model: Holiday) {\r\n        return this._networkService.onUpdate(`${URI.HOLIDAYS}/${id}`, model);\r\n    }\r\n    deleteHoliday(id: string) {\r\n        return this._networkService.onDelete(`${URI.HOLIDAYS}/${id}`);\r\n    }\r\n\r\n\r\n    getLeaves() {\r\n        return this._networkService.getAll(URI.LEAVES);\r\n    }\r\n    createLeave(model: Leave) {\r\n        return this._networkService.post(URI.LEAVES, model);\r\n    }\r\n    editLeave(id: string, model: Leave) {\r\n        return this._networkService.onUpdate(`${URI.LEAVES}/${id}`, model);\r\n    }\r\n    deleteLeave(id: string) {\r\n        return this._networkService.onDelete(`${URI.LEAVES}/${id}`);\r\n    }\r\n}\r\n","import {\n    Component,\n    EventEmitter,\n    Inject,\n    Injector,\n    OnInit,\n    Output,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport {\n    MatDialog,\n    MatDialogRef,\n    MAT_DIALOG_DATA,\n} from \"@angular/material/dialog\";\nimport { WorkingDay } from \"@feature/calender/models/working-week.model\";\nimport { CalendarService } from \"@feature/calender/services/calendar.service\";\nimport { fuseAnimations } from \"@fuse/animations\";\nimport { BaseComponent } from \"@shared/components/base/base.component\";\nimport { WTimeDialogComponent } from \"@shared/components/time-control/w-time-dialog.component\";\nimport { WORKING_DAYS } from \"@shared/constants/app.constants\";\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\n\n@Component({\n    selector: \"app-working-day-form\",\n    templateUrl: \"./working-day-form.component.html\",\n    styleUrls: [\"./working-day-form.component.scss\"],\n    animations: fuseAnimations,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class WorkingDayFormComponent extends BaseComponent implements OnInit {\n    workingDayForm: FormGroup;\n    private hour = 10;\n    private minute = 25;\n    private meridien = \"PM\";\n    workingDaysList: any[] = WORKING_DAYS;\n    @Output() sendResponse: EventEmitter<WorkingDay> = new EventEmitter<any>();\n\n    constructor(\n        public matDialogRef: MatDialogRef<WorkingDayFormComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: WorkingDay,\n        private _service: CalendarService,\n        private dialog: MatDialog,\n        injector: Injector\n    ) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.workingDayForm = new FormGroup({\n            id: new FormControl(this.data.id),\n            startTime: new FormControl(this.data.startTime, [\n                Validators.required,\n            ]),\n            endTime: new FormControl(this.data.endTime, [Validators.required]),\n            fullDay: new FormControl(this.data.fullDay),\n            remarks: new FormControl(this.data.remarks, [Validators.required]),\n            weekDay: new FormControl(this.data.weekday, [Validators.required]),\n        });\n        this.workingDayForm.get(\"fullDay\").valueChanges.subscribe((value) => {\n            if (value) {\n                this.workingDayForm.get(\"startTime\").disable();\n                this.workingDayForm.get(\"endTime\").disable();\n                this.workingDayForm.patchValue({\n                    startTime: null,\n                    endTime: null,\n                });\n            } else {\n                this.workingDayForm.get(\"startTime\").enable();\n                this.workingDayForm.get(\"endTime\").enable();\n                this.workingDayForm\n                    .get(\"startTime\")\n                    .setValidators(Validators.required);\n                this.workingDayForm\n                    .get(\"endTime\")\n                    .setValidators(Validators.required);\n            }\n        });\n    }\n\n    public getTime(): string {\n        return `${this.hour}:${this.minute} ${this.meridien}`;\n    }\n    public showPicker(control) {\n        let dialogRef = this.dialog.open(WTimeDialogComponent, {\n            data: {\n                hour: this.hour,\n                minute: this.minute,\n                meriden: this.meridien,\n            },\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result === undefined) {\n                return;\n            } else if (result !== -1) {\n                this.hour = result.hour;\n                this.minute = result.minute;\n                this.meridien = result.meriden;\n                this.workingDayForm.get(control).patchValue(this.getTime());\n            }\n        });\n        return false;\n    }\n    onSubmit() {\n        let model = { ...this.workingDayForm.value };\n        model = camelToSnakeCase(model);\n        model.full_day = model.full_day  ? 1: 0;\n        model.start_time =\"Mon Sep 07 2020 15:10:10 GMT+0500 (Pakistan Standard Time)\";\n        model.end_time =\"Mon Sep 07 2020 15:10:10 GMT+0500 (Pakistan Standard Time)\";\n        this.sendResponse.emit(model);\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar class=\"mat-accent m-0\">\n        <mat-toolbar-row\n            fxFlex\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <div\n                class=\"logo mb-24 mb-md-0\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"start center\"\n            >\n                <mat-icon\n                    class=\"logo-icon mr-12\"\n                    [@animate]=\"{\n                        value: '*',\n                        params: { delay: '50ms', scale: '0.2' }\n                    }\"\n                >\n                    perm_contact_calendar\n                </mat-icon>\n                <span\n                    class=\"logo-text\"\n                    [@animate]=\"{\n                        value: '*',\n                        params: { delay: '100ms', x: '-25px' }\n                    }\"\n                >\n                    Add Working Day\n                </span>\n            </div>\n            <button\n                mat-icon-button\n                (click)=\"matDialogRef.close()\"\n                aria-label=\"Close dialog\"\n            >\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\n        <div\n            *ngIf=\"responseMessage.length > 0\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"center\"\n            class=\"p-16  message-box {{ errorType }} \"\n        >\n            {{ responseMessage }}\n        </div>\n        <div fxLayout=\"row\">\n            <form\n                class=\"p-24 mr-24\"\n                fxLayout=\"column\"\n                fxLayoutAlign=\"start\"\n                fxFlex=\"1 0\"\n                name=\"workingDayForm\"\n                (ngSubmit)=\"onSubmit()\"\n                novalidate\n                [formGroup]=\"workingDayForm\"\n            >\n                <div\n                    fxLayout=\"row wrap\"\n                    fxLayout.lt-lg=\"column\"\n                    fxLayoutAlign.lt-lg=\"center\"\n                    fxLayoutGap=\"10px\"\n                    fxLayoutAlign=\"start center\"\n                    fxFlex=\"1 1 auto\"\n                >\n                    <div fxFlex=\"100\" class=\"pr-4 margin\">\n                        <mat-checkbox\n                            formControlName=\"fullDay\"\n                            class=\"example-margin\"\n                            >Is Full Day</mat-checkbox\n                        >\n                    </div>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pr-4\"\n                    >\n                        <mat-label>Week Day</mat-label>\n                        <mat-select formControlName=\"weekDay\">\n                            <mat-option\n                                *ngFor=\"let item of workingDaysList\"\n                                [value]=\"item.id\"\n                            >\n                                {{ item.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-icon matSuffix class=\"secondary-text\"\n                            >lock_open</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('weekDay')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pr-4\"\n                    >\n                        <mat-label>Start Time</mat-label>\n                        <input matInput formControlName=\"startTime\" />\n                        <mat-icon\n                            (click)=\"showPicker('startTime')\"\n                            matSuffix\n                            class=\"secondary-text hover\"\n                            style=\"cursor: pointer\"\n                            >arrow_drop_down</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('startTime')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"48\"\n                        class=\"pl-4\"\n                    >\n                        <mat-label>End Time</mat-label>\n                        <input matInput formControlName=\"endTime\" />\n                        <mat-icon\n                            (click)=\"showPicker('endTime')\"\n                            matSuffix\n                            class=\"secondary-text hover\"\n                            style=\"cursor: pointer\"\n                            >arrow_drop_down</mat-icon\n                        >\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('endTime')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field\n                        appearance=\"outline\"\n                        fxFlex=\"100\"\n                        class=\"pl-4\"\n                    >\n                        <mat-label>Remarks</mat-label>\n                        <textarea matInput formControlName=\"remarks\"></textarea>\n                        <mat-error>\n                            <app-mat-error\n                                [control]=\"workingDayForm.get('remarks')\"\n                            ></app-mat-error>\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div\n                    class=\"actions\"\n                    fxLayoutGap=\"10px\"\n                    fxLayout=\"row\"\n                    fxLayoutAlign=\"end center\"\n                >\n                    <button\n                        type=\"button\"\n                        mat-raised-button\n                        (click)=\"matDialogRef.close()\"\n                        color=\"secondary\"\n                        aria-label=\"Follow\"\n                    >\n                        Cancel\n                    </button>\n                    &nbsp;&nbsp;&nbsp;\n                    <button\n                        type=\"submit\"\n                        mat-raised-button\n                        [disabled]=\"workingDayForm.invalid\"\n                        color=\"accent\"\n                        aria-label=\"Send Message\"\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","export class BaseModel {\r\n    id: string;\r\n    status: string;\r\n\r\n    created_on?: Date=new Date();\r\n    updated_on?:  Date=new Date();;\r\n    created_by?: string;\r\n    updated_by?: string;\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}