{"version":3,"sources":["webpack:///src/app/features/entitlement/models/role.model.ts","webpack:///src/app/features/entitlement/role/components/permission/permission.component.ts","webpack:///src/app/features/entitlement/role/components/permission/permission.component.html","webpack:///src/app/features/entitlement/role/components/role-form/role-form.component.ts","webpack:///src/app/features/entitlement/role/components/role-form/role-form.component.html","webpack:///src/app/features/entitlement/role/components/table-row/table-row.component.ts","webpack:///src/app/features/entitlement/role/components/table-row/table-row.component.html","webpack:///src/app/features/entitlement/role/role-routing.module.ts","webpack:///src/app/features/entitlement/role/role.module.ts","webpack:///src/app/features/entitlement/role/services/role.service.ts","webpack:///src/app/features/entitlement/role/views/role/role.component.ts","webpack:///src/app/features/entitlement/role/views/role/role.component.html","webpack:///src/app/shared/models/base.model.ts"],"names":["Role","permissions","PermissionComponent","injector","displayedColumns","dataSource","modules","_mapperService","makeModulesFlat","totalPermissions","map","x","record_type","concat","forEach","module","name","permission","find","item","data","text","selector","templateUrl","styles","animations","RoleFormComponent","matDialogRef","_roleService","ROLE_MANAGEMENT","modulesMapped","sendResponse","_errorEmitService","currentMessage","pipe","_unsubscribeAll","subscribe","errorType","type","responseMessage","message","roleForm","id","role","required","description","formArray","form","createFormGroup","push","value","key","get","addControl","createControl","model","element","getSelectedPermissions","length","emit","onSubmit","styleUrls","encapsulation","None","TableRowComponent","_matDialog","delete","edit","pageSize","PAGE_SIZE","pageSizeOptions","PAGE_SIZE_OPTIONS","expandedId","changes","roles","currentValue","previousValue","paginator","sort","array","height","visibility","static","routes","path","component","RoleRoutingModule","forChild","imports","exports","RoleModule","provide","useValue","appearance","declarations","providers","entryComponents","RoleService","_RubixNetworkService","getAll","MODULE","ROLE","post","onUpdate","onDelete","getRoles","getModules","getPermissions","PERMISSION","checked","Object","keys","filter","module_permission_id","exist","_deleted","providedIn","RoleComponent","getData","forkRolesData","response","role_name","_this","dialogRef","open","userPermissions","disableClose","hasBackdrop","panelClass","componentInstance","editRole","createRole","REMOVE_CONFIRMATION","dialogData","afterClosed","status","flatModules","el","y","openDialog","CREATED","clone","unshift","hideMessage","closeAll","UNKNOWN","setTimeout","UPDATED","index","findIndex","deleteRole","splice","DELETED","confirmDialog","onEditHandler","BaseModel","created_on","Date","updated_on"],"mappings":"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","file":"role-role-module-es5.js","sourcesContent":["import { BaseModel } from '@shared/models/base.model';\r\nimport { Modules } from './modules.model';\r\n\r\nexport class Role extends BaseModel{\r\n    name:string;\r\n    description:string;\r\n    permissions:Array<{id}>=[];\r\n}","import { Modules } from \"./../../../models/modules.model\";\r\nimport { Component, OnInit, Input, Injector } from \"@angular/core\";\r\n\r\nimport { camelToSentenceCase } from \"@shared/helpers/global.helper\";\r\nimport { Permission } from \"@feature/entitlement/models/config.model\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\n@Component({\r\n    selector: \"app-permission\",\r\n    templateUrl: \"./permission.component.html\",\r\n    styles: [\r\n        `\r\n            :host {\r\n                width: 100%;\r\n                padding: 10px;\r\n            }\r\n        `,\r\n    ],\r\n    animations: fuseAnimations,\r\n})\r\nexport class PermissionComponent extends BaseComponent implements OnInit {\r\n    @Input() modules: Array<Modules>;\r\n    @Input() permissions: Array<Permission>;\r\n    displayedColumns = [\"module\"];\r\n    dataSource = new MatTableDataSource<any>();\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.modules = this._mapperService.makeModulesFlat(\r\n            cloneDeep(this.modules)\r\n        );\r\n        const totalPermissions = this.permissions.map((x) => x.record_type);\r\n        this.displayedColumns = this.displayedColumns.concat(totalPermissions);\r\n        this.modules.forEach((module) => {\r\n            module['module'] = module.name;\r\n            totalPermissions.forEach((permission) => {\r\n                module[permission] = module.permissions.find(\r\n                    (item) => item.record_type == permission\r\n                )\r\n                    ? true\r\n                    : false;\r\n            });\r\n        });\r\n        this.dataSource.data = this.modules;\r\n    }\r\n\r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n}\r\n","<div  *ngIf=\"modules.length > 0\">\r\n    <mat-table\r\n        #table\r\n        matSort\r\n        matSortActive=\"id\"\r\n        matSortDirection=\"asc\"\r\n        matSortDisableClear\r\n        [dataSource]=\"dataSource\"\r\n        [@animateStagger]=\"{ value: '50' }\"\r\n    >\r\n        <!-- COLUMNS AND ROWS-->\r\n        <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n            <mat-header-cell *matHeaderCellDef>{{\r\n                camelToSentenceCase(key)\r\n            }}</mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let element; let i = dataIndex\">\r\n                <span *ngIf=\"key.includes('module'); else icon\">{{\r\n                    element[key]\r\n                }}</span>\r\n\r\n                <ng-template #icon>\r\n                    <span style=\"margin-left: 5px\">\r\n                        <mat-icon style=\"color: green\" *ngIf=\"element[key]\"\r\n                            >done\r\n                        </mat-icon>\r\n                        <mat-icon\r\n                            matTooltip=\"No Permission\"\r\n                            style=\"color: red\"\r\n                            *ngIf=\"!element[key]\"\r\n                            >close</mat-icon\r\n                        ></span\r\n                    >\r\n                </ng-template>\r\n            </mat-cell>\r\n        </ng-container>\r\n        <!-- -->\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns\"\r\n            [@animate]=\"{ value: '*', params: { y: '100%' } }\"\r\n        >\r\n        </mat-row>\r\n    </mat-table>\r\n</div>\r\n\r\n<div\r\n    *ngIf=\"modules.length < 1\"\r\n    fxLayout=\"row\"\r\n    fxLayoutAlign=\"center\"\r\n    class=\"p-16\"\r\n>\r\n    No module assigned to this role\r\n</div>\r\n","import { Output, EventEmitter, Injectable, Injector } from \"@angular/core\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { Component, OnInit, Inject, ViewEncapsulation } from \"@angular/core\";\r\nimport { Validators, FormArray, FormGroup, FormControl } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { Permission } from \"@feature/entitlement/models/config.model\";\r\nimport { camelToSentenceCase } from \"@shared/helpers/global.helper\";\r\nimport { MODULES } from '@shared/constants/app.constants';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { RoleService } from '../../services/role.service';\r\n\r\n@Component({\r\n    selector: \"app-role-form\",\r\n    templateUrl: \"./role-form.component.html\",\r\n    styleUrls: [\"./role-form.component.scss\"],\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RoleFormComponent extends BaseComponent implements OnInit {\r\n    roleForm: FormGroup;\r\n    displayedColumns = [\"module\"];\r\n    dataSource = new MatTableDataSource<Permission>();\r\n    modulesMapped: any[] = [];\r\n    \r\n    \r\n    @Output() sendResponse: EventEmitter<Role> = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<RoleFormComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any, private _roleService: RoleService\r\n        ,\r\n        injector: Injector\r\n        ) {\r\n            super(injector,MODULES.ROLE_MANAGEMENT);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n       debugger\r\n        const totalPermissions=this.data.permissions.map((x)=>x.record_type)\r\n        this.displayedColumns= this.displayedColumns.concat(totalPermissions)\r\n\r\n        this._errorEmitService.currentMessage.pipe(takeUntil(this._unsubscribeAll)).subscribe((item) => {\r\n            this.errorType = item.type;\r\n            this.responseMessage = item.message;\r\n        });\r\n        this.roleForm = new FormGroup({\r\n            id: new FormControl(this.data.role.id),\r\n            name: new FormControl(this.data.role.name, [Validators.required]),\r\n            description: new FormControl(this.data.role.description, [\r\n                Validators.required,\r\n            ]),\r\n            modules: new FormArray([]),\r\n        });\r\n        const formArray = this.modules;\r\n        this.data.modules.forEach((item) => {\r\n            const form = this.createFormGroup(item);\r\n            formArray.push(form);\r\n        });\r\n        this.dataSource.data = this.data.modules;\r\n    }\r\n    get modules() {\r\n        return this.roleForm.get(\"modules\") as FormArray;\r\n    }\r\n\r\n    createControl(value) {\r\n        return new FormControl(value ? value : false);\r\n    }\r\n    getFormControl(form, key) {\r\n        return form.get(key);\r\n    }\r\n    createFormGroup(module) {\r\n        const form = new FormGroup({\r\n            module: new FormControl(module),\r\n        });\r\n        module.permissions.forEach((permission) => {\r\n            form.addControl(\r\n                permission.record_type,\r\n                this.createControl(permission.value)\r\n            );\r\n        });\r\n        return form;\r\n    }\r\n    onSubmit() {\r\n        const model = { ...this.roleForm.value };\r\n        let permissions = [];\r\n        model.modules.forEach((element) => {\r\n            const data = this._roleService.getSelectedPermissions(this.data,element);\r\n            if (data && data.length > 0) {\r\n                permissions = permissions.concat(data);\r\n            }\r\n        });\r\n        model.permissions = permissions;\r\n        this.sendResponse.emit(model);\r\n    }\r\n    \r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n  \r\n    \r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n         <div class=\"logo mb-24 mb-md-0\"\r\n                 fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                <mat-icon class=\"logo-icon mr-12\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    security\r\n                </mat-icon>\r\n                <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Roles\r\n                </span>\r\n            </div>\r\n            <button\r\n                mat-icon-button\r\n                (click)=\"matDialogRef.close()\"\r\n                aria-label=\"Close dialog\"\r\n            >\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n       \r\n        <form\r\n        class=\"p-24 mr-24\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"start\"\r\n        fxFlex=\"1 0\"\r\n        name=\"modulesForm\"\r\n        (ngSubmit)=\"onSubmit()\"\r\n        novalidate\r\n        [formGroup]=\"roleForm\"\r\n    >\r\n    <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n        <br>\r\n        <div\r\n            fxLayout=\"row wrap\"\r\n            fxLayout.lt-lg=\"column\"\r\n            fxLayoutAlign.lt-lg=\"center\"\r\n            fxLayoutAlign=\"start center\"\r\n            fxFlex=\"1 1 auto\"\r\n        >\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\" >\r\n                <mat-label>Name <app-required-indicator></app-required-indicator></mat-label>\r\n                <input matInput formControlName=\"name\" />\r\n                <mat-icon matSuffix class=\"secondary-text\"\r\n                    >account_circle</mat-icon\r\n                >\r\n                <mat-error>\r\n                    <app-mat-error\r\n                        [control]=\"roleForm.get('name')\"\r\n                    ></app-mat-error>\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n                <mat-label>Description <app-required-indicator></app-required-indicator></mat-label>\r\n                <textarea matInput placeholder=\"Description\" formControlName=\"description\"></textarea>\r\n                <mat-icon matSuffix class=\"secondary-text\"\r\n                    >account_circle</mat-icon>\r\n                <mat-error>\r\n                    <app-mat-error [control]=\"roleForm.get('description')\"></app-mat-error>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <hr>\r\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <mat-table style=\"width: 100%;\" #table matSort matSortActive=\"id\" matSortDirection=\"asc\" matSortDisableClear [dataSource]=\"dataSource\" [@animateStagger]=\"{ value: '50' }\">\r\n                <!-- COLUMNS AND ROWS-->\r\n                <ng-container *ngFor=\"let key of displayedColumns;  \" [matColumnDef]=\"key\">\r\n                   <mat-header-cell  *matHeaderCellDef>\r\n                    <div *ngIf=\"key=='module'\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                        {{ camelToSentenceCase(key)  }}\r\n                       </div>   \r\n                       <div *ngIf=\"key!=='module'\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                        {{ camelToSentenceCase(key)  }}\r\n                       </div>   \r\n                   </mat-header-cell>\r\n                  \r\n                   <mat-cell  *matCellDef=\"let control of modules.controls; let i = index;\" >\r\n                       <div *ngIf=\"key==='module'; else checkboxes\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                        <span >{{modules.controls[i].get(key).value.name}}</span>\r\n                       </div>\r\n                       <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                        <ng-template #checkboxes>\r\n                            <ng-container *ngIf=\"modules.controls[i].get(key); else nothing\">\r\n                                <input type=\"checkbox\" [formControl]=\"modules.controls[i].get(key)\" >\r\n                            </ng-container>\r\n                        <ng-template #nothing>\r\n                            <input type=\"checkbox\" disabled >\r\n                        </ng-template>\r\n                        </ng-template>\r\n                       </div>\r\n                            \r\n                   </mat-cell>\r\n               </ng-container>\r\n               <!-- -->\r\n               <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n               <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [@animate]=\"{value:'*',params:{y:'100%'}}\">\r\n               </mat-row>\r\n           </mat-table>\r\n        </div>\r\n        <br>\r\n        <div class=\"actions mb-24\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n            <button\r\n                type=\"button\"\r\n                mat-raised-button\r\n                (click)=\"matDialogRef.close()\"\r\n                color=\"secondary\"\r\n                aria-label=\"Follow\"\r\n            >\r\n                Cancel\r\n            </button>\r\n            &nbsp;&nbsp;&nbsp;\r\n          \r\n            <button\r\n            appPermission\r\n            [permissions]=\"data.userPermissions\"\r\n            [type]=\"data.role.id ? 'edit' : 'create'\"\r\n                type=\"submit\"\r\n                [disabled]=\"roleForm.invalid\"\r\n                mat-raised-button\r\n                color=\"accent\"\r\n                class=\"submit-button\"\r\n                aria-label=\"Send Message\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </form>\r\n    </div>\r\n</div>\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    SimpleChanges,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport {\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate,\r\n} from \"@angular/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport {\r\n    getName,\r\n    camelToSentenceCase,\r\n    camelToSnakeCaseText,\r\n} from \"@shared/helpers/global.helper\";\r\nimport { CONFIG } from \"@config/index\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MODULES } from \"@shared/constants/app.constants\";\r\n\r\n@Component({\r\n    selector: \"app-table-row\",\r\n    templateUrl: \"./table-row.component.html\",\r\n    styleUrls: [\"./table-row.component.scss\"],\r\n    animations: [\r\n        trigger(\"expandableRow\", [\r\n            state(\r\n                \"collapsed, void\",\r\n                style({\r\n                    height: \"0px\",\r\n                    visibility: \"hidden\",\r\n                })\r\n            ),\r\n            state(\r\n                \"expanded\",\r\n                style({\r\n                    \"min-height\": \"48px\",\r\n                    height: \"*\",\r\n                    visibility: \"visible\",\r\n                })\r\n            ),\r\n            transition(\r\n                \"expanded <=> collapsed, void <=> *\",\r\n                animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\r\n            ),\r\n        ]),\r\n    ],\r\n})\r\nexport class TableRowComponent extends BaseComponent {\r\n    @Input() roles: any[];\r\n    @Input() displayedColumns: string[];\r\n    @Input() permissions: string[];\r\n    @Output() delete = new EventEmitter();\r\n    @Output() edit = new EventEmitter();\r\n    pageSize: number = CONFIG.PAGE_SIZE;\r\n    pageSizeOptions: Array<number> = CONFIG.PAGE_SIZE_OPTIONS;\r\n    expandedId: string = \"\";\r\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n    dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n    constructor(public _matDialog: MatDialog, injector: Injector) {\r\n        super(injector, MODULES.ROLE_MANAGEMENT);\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.roles.currentValue != changes.roles.previousValue) {\r\n            this.dataSource = new MatTableDataSource(this.roles);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        }\r\n    }\r\n    toggleExpandableSymbol(id: string): void {\r\n        this.expandedId = this.expandedId === id ? \"\" : id;\r\n    }\r\n    displayName(id, array) {\r\n        return getName(id, \"name\", array);\r\n    }\r\n    camelToSnakeCase(text) {\r\n        return camelToSnakeCaseText(text);\r\n    }\r\n    camelToSentenceCase(text) {\r\n        return camelToSentenceCase(text);\r\n    }\r\n    onDelete(id) {\r\n        this.delete.emit(id);\r\n    }\r\n    onEdit(data) {\r\n        this.edit.emit(data);\r\n    }\r\n}\r\n","<div >\r\n    <mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\r\n\r\n        <!-- COLUMNS AND ROWS-->\r\n        <ng-container *ngFor=\"let key of displayedColumns\" [matColumnDef]=\"key\">\r\n            <mat-header-cell *matHeaderCellDef>{{ key.includes('Icon') ? 'Modules' : camelToSentenceCase(key) }}</mat-header-cell>\r\n\r\n            <mat-cell *matCellDef=\"let element; let i = dataIndex\">\r\n                <span *ngIf=\"key.includes('Icon') || key.includes('action') ; else columns\">\r\n                    <ng-container *ngIf=\"key.includes('Icon')\">\r\n                        <mat-icon *ngIf=\"key === 'expandIcon' \" matTooltip=\"Explore\" (click)=\"toggleExpandableSymbol(element['id'])\"> {{expandedId==element['id'] ? 'keyboard_arrow_up' : ' keyboard_arrow_down'}} </mat-icon>\r\n                        <mat-icon *ngIf=\"key === 'expandIcon' \" matTooltip=\"Close\" (click)=\"toggleExpandableSymbol(element['id'])\"></mat-icon>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"key.includes('action')\">\r\n                        <mat-icon appPermission [permissions]=\"userPermissions\"  matTooltip=\"Delete user\" [type]=\"'delete'\" color=\"warn\" type=\"button\" (click)=\"onDelete(element['id'])\">delete</mat-icon> &nbsp;&nbsp;\r\n                        <mat-icon type=\"button\" matTooltip=\"Edit user\" (click)=\"onEdit(element)\">mode_edit</mat-icon>\r\n                    </ng-container>\r\n                </span>\r\n                <ng-template #columns>\r\n                    <span *ngIf=\"element[camelToSnakeCase(key)]; else defaultText\">\r\n                        <ng-container  *ngIf=\"camelToSnakeCase(key).indexOf('created')<0; else date \"  >\r\n                            {{element[camelToSnakeCase(key)]}}\r\n                        </ng-container>\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template #defaultText>\r\n                    <app-default-text></app-default-text>\r\n                </ng-template>\r\n                <ng-template #date>\r\n                    {{element[camelToSnakeCase(key)] | date:'mediumDate'}}\r\n                </ng-template>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n            <mat-cell *matCellDef=\"let element\" [@expandableRow]=\"element['id'] === expandedId ? 'expanded' : 'collapsed'\">\r\n                <app-permission *ngIf=\"expandedId==element['id']\" [permissions]=\"permissions\" [modules]=\"element['modules']\"></app-permission>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <!-- -->\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n        <mat-row class=\"expandable-row\" *matRowDef=\"let row; columns: ['expandedDetail'];\">\r\n        </mat-row>\r\n\r\n    </mat-table>\r\n    <mat-paginator #paginator [pageIndex]=\"0\" [pageSize]=\"pageSize\" showFirstLastButtons [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleComponent } from './views/role/role.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      component: RoleComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleRoutingModule { }\r\n","import { RoleComponent } from './views/role/role.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { RoleRoutingModule } from \"./role-routing.module\";\r\nimport { SharedModule } from \"@shared/shared.module\";\r\nimport { FuseSidebarModule } from \"@fuse/components\";\r\nimport { PermissionComponent } from './components/permission/permission.component';\r\nimport { RoleFormComponent } from './components/role-form/role-form.component';\r\nimport { TableRowComponent } from './components/table-row/table-row.component';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { MaterialModule } from '@shared/modules/material/material.module';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PermissionComponent,\r\n        RoleComponent,\r\n        RoleFormComponent,\r\n        TableRowComponent,\r\n    ],\r\n    imports: [\r\n        RoleRoutingModule,\r\n        CommonModule,\r\n        SharedModule,\r\n        FuseSidebarModule,\r\n        FuseSharedModule,\r\n        MaterialModule,\r\n    ],\r\n    providers: [\r\n      { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n    ],\r\n    entryComponents:[RoleFormComponent]\r\n})\r\nexport class RoleModule {}\r\n","import { URI } from \"@shared/constants/app.constants\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { forkJoin } from \"rxjs\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\nimport { RubixNetworkService } from \"@shared/services/rubix-network/rubix-network.service.ts\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class RoleService {\r\n    constructor(private _RubixNetworkService: RubixNetworkService) {}\r\n    getModules() {\r\n        return this._RubixNetworkService.getAll(URI.MODULE);\r\n    }\r\n    getRoles() {\r\n        return this._RubixNetworkService.getAll(URI.ROLE);\r\n    }\r\n    createRole(model: Role) {\r\n        return this._RubixNetworkService.post(URI.ROLE, model);\r\n    }\r\n    editRole(id: string, model: Role) {\r\n        return this._RubixNetworkService.onUpdate(`${URI.ROLE}/${id}`, model);\r\n    }\r\n    deleteRole(id: string) {\r\n        return this._RubixNetworkService.onDelete(`${URI.ROLE}/${id}`);\r\n    }\r\n    forkRolesData() {\r\n        return forkJoin([\r\n            this.getRoles(),\r\n            this.getModules(),\r\n            this.getPermissions(),\r\n        ]);\r\n    }\r\n    getPermissions() {\r\n        return this._RubixNetworkService.getAll(URI.PERMISSION);\r\n    }\r\n    getSelectedPermissions(data, element) {\r\n        const checked = Object.keys(element).filter((key) => {\r\n            return element[key] == true;\r\n        });\r\n        const module = data.modules.find(\r\n            (module) => module.id === element.module.id\r\n        );\r\n        const permissions = [];\r\n        checked.forEach((key) => {\r\n            const permission = element.module.permissions.find(\r\n                (item) => item.record_type == key\r\n            );\r\n\r\n            permissions.push({ id: permission.module_permission_id });\r\n        });\r\n        if (data.role.id && data.role.id.length > 0) {\r\n            module.permissions.forEach((x) => {\r\n                const exist = permissions.find(\r\n                    (item) => item.id == x.module_permission_id\r\n                );\r\n                if (!exist && x.value) {\r\n                    permissions.push({\r\n                        id: x.module_permission_id,\r\n                        _deleted: true,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return permissions;\r\n    }\r\n}\r\n","import { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport {\r\n    Component,\r\n    OnInit,\r\n    ViewEncapsulation,\r\n    ViewChild,\r\n    Injector,\r\n} from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Role } from \"@feature/entitlement/models/role.model\";\r\n\r\nimport { removeRandom } from \"@shared/helpers/global.helper\";\r\nimport {  MODULES } from \"@shared/constants/app.constants\";\r\nimport {\r\n    ConfirmDialogModel,\r\n    ConfirmDialogComponent,\r\n} from \"@shared/components/confirm-dialog/confirm-dialog.component\";\r\nimport { RoleService } from \"../../services/role.service\";\r\nimport { RoleFormComponent } from \"../../components/role-form/role-form.component\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { Modules } from \"@feature/entitlement/models/modules.model\";\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\n@Component({\r\n    selector: \"app-role\",\r\n    templateUrl: \"./role.component.html\",\r\n    animations: fuseAnimations,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class RoleComponent extends BaseComponent implements OnInit {\r\n    roles: Role[] = [];\r\n    modules: Modules[] = [];\r\n    permissions: Permissions[] = [];\r\n    dialogRef: any;\r\n\r\n    displayedColumns = [\r\n        \"roleName\",\r\n        \"description\",\r\n        \"createdOn\",\r\n        \"expandIcon\",\r\n        \"action\",\r\n    ];\r\n\r\n    constructor(\r\n        public _matDialog: MatDialog,\r\n        private _roleService: RoleService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector, MODULES.ROLE_MANAGEMENT);\r\n    }\r\n    ngOnInit(): void {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        this._roleService.forkRolesData().pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.roles = response[0];\r\n                const modules = response[1];\r\n                this.permissions = response[2];\r\n                this.modules = this._mapperService.makeModulesFlat(modules);\r\n                this.roles = this.roles.map((role) => ({\r\n                    ...role,\r\n                    role_name: role.name,\r\n                }));\r\n            },\r\n            (response) => super.onError(response)\r\n        );\r\n    }\r\n\r\n    openDialog(data, modules): void {\r\n        var _this = this;\r\n        this.dialogRef = this._matDialog\r\n            .open(RoleFormComponent, {\r\n                data: {\r\n                    role: data ? data : new Role(),\r\n                    userPermissions: this.userPermissions,\r\n                    modules: modules ? modules : cloneDeep(this.modules),\r\n                    roles: this.roles,\r\n                    permissions: this.permissions,\r\n                },\r\n                disableClose: true,\r\n                hasBackdrop: true,\r\n                panelClass: \"app-role-form\",\r\n            })\r\n            .componentInstance.sendResponse.subscribe((response) => {\r\n                if (response.id) {\r\n                    _this.editRole(response);\r\n                } else {\r\n                    _this.createRole(response);\r\n                }\r\n            });\r\n    }\r\n    confirmDialog(id): void {\r\n        const message = removeRandom(MESSAGES.REMOVE_CONFIRMATION());\r\n        const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\r\n        const dialogRef = this._matDialog.open(ConfirmDialogComponent, {\r\n            data: dialogData,\r\n            disableClose: true,\r\n            panelClass: \"app-confirm-dialog\",\r\n            hasBackdrop: true,\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((status) => {\r\n            if (status) {\r\n                this.onDelete(id);\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditHandler(data) {\r\n        const flatModules= this._mapperService.makeModulesFlat(cloneDeep(data.modules))\r\n        let modules = cloneDeep(this.modules);\r\n        modules = modules.map((el) => {\r\n            const exist =flatModules.find(x=>x.id==el.id);\r\n            if (!exist) return el;\r\n            el.permissions = el.permissions.map((x) => {\r\n                const item=exist.permissions.find((y) => y.id == x.id);\r\n                return {\r\n                    ...x,\r\n                    value: item?true : false,\r\n                    ...item\r\n                };\r\n            });\r\n            return el;\r\n        });\r\n        this.openDialog(data, modules);\r\n    }\r\n\r\n    createRole(data: Role) {\r\n        this._roleService.createRole(data).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                this.responseMessage = MESSAGES.CREATED(\"Role\");\r\n                const clone = cloneDeep(this.roles);\r\n                response.role_name = response.name;\r\n                clone.unshift(response);\r\n                this.roles = clone;\r\n                this.hideMessage();\r\n                this._matDialog.closeAll();\r\n                this._errorEmitService.emit(\"\", \"\");\r\n            },\r\n            (response) => {\r\n                this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n            }\r\n        );\r\n    }\r\n    hideMessage() {\r\n        setTimeout(() => {\r\n            this.responseMessage = \"\";\r\n        }, 2000);\r\n    }\r\n    editRole(model: Role) {\r\n        this._roleService.editRole(model.id, model).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                response.role_name = response.name;\r\n                this.responseMessage = MESSAGES.UPDATED(\"Role\");\r\n                const clone = cloneDeep(this.roles);\r\n                const index = clone.findIndex((x) => x.id == model.id);\r\n                clone[index] = response;\r\n                this.roles = clone;\r\n                this.hideMessage();\r\n                this._matDialog.closeAll();\r\n            },\r\n            (response) => {\r\n                this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n            }\r\n        );\r\n    }\r\n    onDelete(id: string) {\r\n        this._roleService.deleteRole(id).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                this.hideMessage();\r\n                const index = this.roles.findIndex((x) => x.id == id);\r\n                const clone = cloneDeep(this.roles);\r\n                clone.splice(index, 1);\r\n                this.roles = clone;\r\n                this.responseMessage = MESSAGES.DELETED(\"Role\");\r\n            },\r\n            (response) => super.onError(response)\r\n        );\r\n    }\r\n}\r\n","<div   class=\"page-container page-layout carded fullwidth inner-scroll\">\r\n\r\n    <!-- TOP BACKGROUND -->\r\n    <div class=\"top-bg accent\"></div>\r\n    <!-- / TOP BACKGROUND -->\r\n\r\n    <!-- CENTER -->\r\n    <div class=\"center\">\r\n\r\n        <!-- HEADER -->\r\n        <div class=\"header accent\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"space-between center\">\r\n\r\n            <!-- APP TITLE -->\r\n            <div class=\"logo mb-24 mb-md-0\" fxLayout=\"row\" fxLayoutAlign=\"start center\" >\r\n                <mat-icon class=\"logo-icon s-32 mr-16\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\r\n                    settings_applications\r\n                </mat-icon>\r\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\r\n                    Roles\r\n                </span>\r\n            </div>\r\n            <!-- / APP TITLE -->\r\n\r\n            <!-- SEARCH -->\r\n            <div class=\"search-wrapper mx-32 mx-md-0\" >\r\n                <div class=\"search\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                    <mat-icon>search</mat-icon>\r\n                    <input  name=\"roleName\" placeholder=\"Search for a role\">\r\n                </div>\r\n            </div>\r\n            <!-- / SEARCH -->\r\n\r\n            <!-- ADD BUTTON -->\r\n            <button  mat-raised-button color=\"accent\" (click)=\"openDialog(null,null)\" class=\"add-product-button fuse-white mt-24 mt-md-0\">\r\n                <span>ADD NEW ROLE</span>\r\n            </button>\r\n            <!-- / ADD BUTTON -->\r\n\r\n        </div>\r\n        <!-- / HEADER -->\r\n\r\n        <!-- CONTENT CARD -->\r\n        <div class=\"content-card\" fusePerfectScrollbar>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <app-table-row (delete)=\"confirmDialog($event)\"  (edit)=\"onEditHandler($event)\" [roles]=\"roles\" [permissions]=\"permissions\" [displayedColumns]=\"displayedColumns\"  >\r\n            </app-table-row>\r\n        </div>\r\n        <!-- / CONTENT CARD -->\r\n    </div>\r\n    <!-- / CENTER -->\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export class BaseModel {\r\n    id: string;\r\n    status: string;\r\n\r\n    created_on?: Date=new Date();\r\n    updated_on?:  Date=new Date();;\r\n    created_by?: string;\r\n    updated_by?: string;\r\n}\r\n\r\n\r\n"]}