{"version":3,"sources":["./src/app/features/setting/components/about/about.component.ts","./src/app/features/setting/components/about/about.component.html","./src/app/features/setting/components/update-password/update-password.component.ts","./src/app/features/setting/components/update-password/update-password.component.html","./src/app/features/setting/components/update-profile/update-profile.component.ts","./src/app/features/setting/components/update-profile/update-profile.component.html","./src/app/features/setting/setting-routing.module.ts","./src/app/features/setting/setting.constant.ts","./src/app/features/setting/setting.module.ts","./src/app/features/setting/setting.service.ts","./src/app/features/setting/views/profile/profile.component.ts","./src/app/features/setting/views/profile/profile.component.html"],"names":[],"mappings":"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","file":"setting-setting-module-es2015.js","sourcesContent":["import { getName } from \"@shared/helpers/global.helper\";\r\nimport { Component, OnInit, ViewEncapsulation, Input } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { NATIONALITY_LIST } from \"@shared/constants/app.constants\";\r\n\r\n@Component({\r\n    selector: \"app-about\",\r\n    templateUrl: \"./about.component.html\",\r\n    styleUrls: [\"./about.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class AboutComponent implements OnInit {\r\n    @Input() user: any;\r\n    @Input() nationalities: any[];\r\n\r\n    nationalityList: any[] = NATIONALITY_LIST;\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {\r\n    }\r\n    getNationality(id) {\r\n        return getName(id, \"nationality\", this.nationalities);\r\n    }\r\n}\r\n","<div id=\"about\" class=\"p-24\" fxLayout=\"row wrap\">\r\n    <div class=\"about-content\" fxLayout=\"column\" fxFlex=\"100\">\r\n        <div class=\"profile-box info-box general\" fxLayout=\"column\">\r\n\r\n            <header class=\"accent\">\r\n                <div class=\"title\">General Information</div>\r\n            </header>\r\n\r\n            <div class=\"content\">\r\n                <div fxLayout=\"column\" fxFlex=\"48\">\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">User Name</div>\r\n                        <div class=\"info\" *ngIf=\"user.username ; else defaultText\">{{user.username}}</div>\r\n                    </div>\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">First Name</div>\r\n                        <div class=\"info\" *ngIf=\"user.firstName ; else defaultText\">{{user.firstName }}</div>\r\n                    </div>\r\n\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Middle Name</div>\r\n                        <div class=\"info\" *ngIf=\"user.middleName ; else defaultText\">{{user.middleName}}</div>\r\n                    </div>\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Last Name</div>\r\n                        <div class=\"info\" *ngIf=\"user.lastName ; else defaultText\">{{user.lastName}}</div>\r\n                    </div>\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Email</div>\r\n                        <div class=\"info\" *ngIf=\"user.email ; else defaultText\">{{user.email}}</div>\r\n                    </div>\r\n\r\n                   \r\n                </div>\r\n                <div fxLayout=\"column\" fxFlex=\"48\">\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Gender</div>\r\n                        <div class=\"info\" *ngIf=\"user.gender ; else defaultText\">{{user.gender}}</div>\r\n                    </div>\r\n\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Nationality</div>\r\n                        <div class=\"info\" *ngIf=\"user.nationalityId ; else defaultText\">{{getNationality(user.nationalityId)}}</div>\r\n                    </div>\r\n\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Date of Birth</div>\r\n                        <div class=\"info\" *ngIf=\"user.dateOfBirth ; else defaultText\">{{user.dateOfBirth | date:'mediumDate'}}</div>\r\n                    </div>\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Contact</div>\r\n                        <div class=\"info\" *ngIf=\"user.contactNo ; else defaultText\">{{user.contactNo}}</div>\r\n                    </div>\r\n\r\n                    <div class=\"info-line\">\r\n                        <div class=\"title\">Created On</div>\r\n                        <div class=\"info\" *ngIf=\"user.createdOn ; else defaultText\">{{user.createdOn | date:'mediumDate'}}</div>\r\n                    </div>\r\n\r\n                    <ng-template #defaultText>\r\n                        <app-default-text></app-default-text>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation, Injector, EventEmitter, Output, Input } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\r\nimport { BaseComponent } from '@shared/components/base/base.component';\r\nimport { REGEX } from '@config/index';\r\n\r\n@Component({\r\n    selector: \"app-update-password\",\r\n    templateUrl: \"./update-password.component.html\",\r\n    styleUrls: [\"./update-password.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class UpdatePasswordComponent extends BaseComponent implements OnInit {\r\n    updatePasswordForm: FormGroup;\r\n    @Input() responseMessage:string;\r\n    @Input() errorType:string;\r\n    @Output() submit = new EventEmitter();\r\n    constructor(\r\n        injector: Injector\r\n        ) {\r\n            super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updatePasswordForm = new FormGroup({\r\n            currentPassword: new FormControl(\"\", [Validators.required]),\r\n            newPassword: new FormControl(\"\", [Validators.required,Validators.pattern(REGEX.PASSWORD)]),\r\n            confirmPassword: new FormControl(\"\", [\r\n                Validators.required,\r\n                this.confirmPasswordValidator.bind(this),\r\n            ]),\r\n        });\r\n    }\r\n    confirmPasswordValidator(control: FormControl): { [s: string]: boolean } {\r\n        if (\r\n            this.updatePasswordForm &&\r\n            control.value !== this.updatePasswordForm.controls.newPassword.value\r\n        ) {\r\n            return { passwordNotMatch: true };\r\n        }\r\n        return null;\r\n    }\r\n    onSubmit() {\r\n        let model = { ...this.updatePasswordForm.value };\r\n        model = camelToSnakeCase(model);\r\n       this.submit.emit(model)\r\n    }\r\n}\r\n","<div id=\"about\" class=\"p-24\" fxLayout=\"row wrap\">\r\n    <div class=\"about-content\" fxLayout=\"column\" fxFlex=\"100\">\r\n        <div class=\"profile-box info-box general\" fxLayout=\"column\">\r\n\r\n            <header class=\"accent\">\r\n                <div class=\"title\">Update Password</div>\r\n            </header>\r\n\r\n            <div class=\"content\">\r\n                <form\r\n                class=\"p-24 mr-24\"\r\n                fxLayout=\"column\"\r\n                fxLayoutAlign=\"start\"\r\n                fxFlex=\"1 0\"\r\n                name=\"updatePasswordForm\"\r\n                (ngSubmit)=\"onSubmit()\"\r\n                novalidate\r\n                [formGroup]=\"updatePasswordForm\"\r\n            >\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <br>\r\n                <div\r\n                    fxLayout=\"row wrap\"\r\n                    fxLayout.lt-lg=\"column\"\r\n                    fxLayoutAlign.lt-lg=\"center\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    fxFlex=\"1 1 auto\"\r\n                >\r\n               \r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n                        <mat-label>Current Password <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input type=\"password\" matInput formControlName=\"currentPassword\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"updatePasswordForm.get('currentPassword')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n                        <mat-label>Password <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input type=\"password\" matInput formControlName=\"newPassword\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"updatePasswordForm.get('newPassword')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" fxFlex=\"100\" class=\"pr-4\">\r\n                        <mat-label>Confirm Password <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input type=\"password\" matInput formControlName=\"confirmPassword\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"updatePasswordForm.get('confirmPassword')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            \r\n                <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        mat-raised-button\r\n                        color=\"accent\"\r\n                        aria-label=\"Send Message\"\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { SettingService } from './../../setting.service';\r\nimport { Component, OnInit, ViewEncapsulation, Inject, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { FormGroup,  FormControl, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport {  GENDER_LIST, NATIONALITY_LIST } from \"@shared/constants/app.constants\";\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { User } from '@feature/entitlement/models/user.model';\r\nimport { BaseComponent } from '@shared/components/base/base.component';\r\nimport { ValidatorService } from '@shared/services/validator-service/validator.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n  styleUrls: ['./update-profile.component.scss'],\r\n   encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class UpdateProfileComponent extends BaseComponent implements OnInit {\r\n\r\n    userForm: FormGroup;\r\n    response: User;\r\n    @Output() sendResponse: EventEmitter<User> = new EventEmitter<any>();\r\n    nationalityList: any[];\r\n    genderList: any[]=GENDER_LIST;\r\n    constructor(\r\n        public matDialogRef: MatDialogRef<UpdateProfileComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        injector: Injector\r\n        ) {\r\n            super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._errorEmitService.currentMessage\r\n        .pipe(takeUntil(this._unsubscribeAll))\r\n        .subscribe((item) => {\r\n            this.errorType = item.type;\r\n            this.responseMessage = item.message;\r\n        });\r\n        this.userForm = new FormGroup({\r\n            id: new FormControl(this.data.user.id),\r\n            firstName: new FormControl(this.data.user.firstName, [Validators.required]),\r\n            middleName: new FormControl(this.data.user.middleName, ),\r\n            lastName: new FormControl(this.data.user.lastName),\r\n            contactNo: new FormControl(this.data.user.contactNo,[Validators.required,ValidatorService.numbersOnly]),\r\n            gender: new FormControl(this.data.user.gender,[Validators.required]),\r\n            email: new FormControl({value:this.data.user.email, disabled:true}),\r\n            dateOfBirth: new FormControl(this.data.user.dateOfBirth ? new Date(this.data.user.dateOfBirth) : null, [Validators.required]),\r\n            nationalityId: new FormControl(this.data.user.nationalityId, [Validators.required] ),\r\n        });\r\n        this.nationalityList= this.data.nationalities\r\n    }\r\n   \r\n    onSubmit() {\r\n        const model = { ...this.userForm.value };\r\n        model.dateOfBirth= new Date(model.dateOfBirth).toLocaleDateString()\r\n        this.sendResponse.emit(model);\r\n    }\r\n    onClose() {\r\n        this.matDialogRef.close(this.response);\r\n    }\r\n}\r\n","<div class=\"dialog-content-wrapper\">\r\n    <mat-toolbar class=\"mat-accent m-0\">\r\n        <mat-toolbar-row\r\n            fxFlex\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n        >\r\n            <span class=\"title dialog-title\">Edit Your Profile</span>\r\n            <button\r\n                mat-icon-button\r\n                (click)=\"onClose()\"\r\n                aria-label=\"Close dialog\"\r\n            >\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar>\r\n\r\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\r\n        <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n        <div fxLayout=\"row\">\r\n            <form\r\n                class=\"p-24 mr-24\"\r\n                fxLayout=\"column\"\r\n                fxLayoutAlign=\"start\"\r\n                fxFlex=\"1 0\"\r\n                name=\"userForm\"\r\n                (ngSubmit)=\"onSubmit()\"\r\n                novalidate\r\n                [formGroup]=\"userForm\"\r\n            >\r\n                <div\r\n                    fxLayout=\"row wrap\"\r\n                    fxLayout.lt-lg=\"column\"\r\n                    fxLayoutAlign.lt-lg=\"center\"\r\n                    fxLayoutGap=\"10px\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    fxFlex=\"1 1 auto\"\r\n                >\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>First Name <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"firstName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('firstName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Middle Name</mat-label>\r\n                        <input matInput formControlName=\"middleName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('middleName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Last Name <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"lastName\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('lastName')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Date of Birth <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input\r\n                            matInput\r\n                            [matDatepicker]=\"picker\"\r\n                            formControlName=\"dateOfBirth\"\r\n                        />\r\n                        <mat-datepicker-toggle\r\n                            matSuffix\r\n                            [for]=\"picker\"\r\n                        ></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                        <!-- <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon> -->\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('dateOfBirth')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>Gender <app-required-indicator></app-required-indicator></mat-label>\r\n                        <mat-select formControlName=\"gender\">\r\n                            <mat-option *ngFor=\"let item of genderList\" [value]=\"item.id\">\r\n                                {{item.name}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >face</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('gender')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pr-4\"\r\n                    >\r\n                        <mat-label>Nationality <app-required-indicator></app-required-indicator></mat-label>\r\n                        <mat-select formControlName=\"nationalityId\">\r\n                            <mat-option *ngFor=\"let item of nationalityList\" [value]=\"item.id\">\r\n                                {{item.nationality}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >outlined_flag</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('nationalityId')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Email <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"email\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >email</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('email')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"32\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Contact No<app-required-indicator></app-required-indicator></mat-label>\r\n                        <input matInput formControlName=\"contactNo\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >phone</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"userForm.get('contactNo')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                 \r\n                </div>\r\n\r\n                <div\r\n                    class=\"actions\"\r\n                    fxLayoutGap=\"10px\"\r\n                    fxLayout=\"row\"\r\n                    fxLayoutAlign=\"end center\"\r\n                >\r\n                    <button\r\n                        type=\"button\"\r\n                        mat-raised-button\r\n                        (click)=\"onClose()\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"Follow\"\r\n                        class=\"btn-cancel\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    <button\r\n                        type=\"submit\"\r\n                        [disabled]=\"userForm.invalid\"\r\n                        mat-raised-button\r\n                        color=\"accent\"\r\n                        class=\"submit-button\"\r\n                        aria-label=\"Send Message\"\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: \"\",\r\n      redirectTo:'profile',\r\n  },\r\n  {\r\n      path: \"profile\",\r\n      component: ProfileComponent,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","export const UPDATE_PASSWORD='/api/v1/entitlements/auth/password/'\r\nexport const UPDATE_PROFILE='/api/v1/entitlements/auth/me/'","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { SettingRoutingModule } from \"./setting-routing.module\";\r\nimport { ProfileComponent } from \"./views/profile/profile.component\";\r\nimport { MaterialFormsModule } from \"@shared/modules/material-forms/material-forms.module\";\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { UpdateProfileComponent } from './components/update-profile/update-profile.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\r\n\r\n@NgModule({\r\n    declarations: [ProfileComponent, AboutComponent, UpdateProfileComponent, UpdatePasswordComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SettingRoutingModule,\r\n        MatTabsModule,\r\n        MaterialFormsModule,\r\n        SharedModule,\r\n        FuseSharedModule,\r\n    ],\r\n})\r\nexport class SettingModule {}\r\n","import { NetworkService } from '@shared/services/network/network.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ChangePasswordModel } from './models/setting.model';\r\nimport { UPDATE_PASSWORD, UPDATE_PROFILE } from './setting.constant';\r\nimport { ReferenceService } from '@shared/services/reference/reference.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SettingService {\r\n    constructor(private _networkService:NetworkService, private _refService: ReferenceService) { }\r\n\r\n    updatePassword(model:ChangePasswordModel){\r\n       return this._networkService.onUpdate(UPDATE_PASSWORD,model);\r\n    }\r\n    updateProfile(model:ChangePasswordModel){\r\n       return this._networkService.onUpdate(UPDATE_PROFILE,model);\r\n    }\r\n    getNationalities(){\r\n      return this._refService.getCountries();\r\n    }\r\n    \r\n}","import { SettingService } from \"./../../setting.service\";\r\nimport { Component, OnInit, ViewEncapsulation, Injector } from \"@angular/core\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { UpdateProfileComponent } from \"@feature/setting/components/update-profile/update-profile.component\";\r\nimport { User } from \"@feature/entitlement/models/user.model\";\r\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { MESSAGES } from \"@shared/constants/messages.constant\";\r\n\r\n@Component({\r\n    selector: \"app-profile\",\r\n    templateUrl: \"./profile.component.html\",\r\n    styleUrls: [\"./profile.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class ProfileComponent extends BaseComponent implements OnInit {\r\n    dialogRef: any;\r\n\r\n    currentUser: any;\r\n    nationalities: any[];\r\n    constructor(\r\n        public _matDialog: MatDialog,\r\n        private _settingService: SettingService,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.currentUser = this._authUserService.User;\r\n        this.getData();\r\n    }\r\n    openDialog(): void {\r\n        const _this = this;\r\n        this.dialogRef = this._matDialog\r\n            .open(UpdateProfileComponent, {\r\n                data: {\r\n                    user: this.currentUser,\r\n                    nationalities: this.nationalities,\r\n                },\r\n                panelClass: \"app-update-profile\",\r\n                disableClose: true,\r\n                hasBackdrop: true,\r\n            })\r\n            .componentInstance.sendResponse.subscribe((response) => {\r\n                _this.onUpdateProfile(response);\r\n            })\r\n    }\r\n    getData() {\r\n        this._settingService\r\n            .getNationalities()\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.nationalities = response;\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n    onUpdateProfile(data) {\r\n        data = camelToSnakeCase(data);\r\n        this._settingService\r\n            .updateProfile(data)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response: User) => {\r\n                    this._authUserService.User = response;\r\n                    this.currentUser = this._authUserService.User;\r\n                    this.errorType = \"success\";\r\n                    this.responseMessage = MESSAGES.UPDATED(\"Profile\");\r\n                    this._matDialog.closeAll();\r\n                    this._errorEmitService.emit(\"\", \"\");\r\n                },\r\n                (response) => {\r\n                    this._errorEmitService.emit(MESSAGES.UNKNOWN(), \"error\");\r\n                }\r\n            );\r\n    }\r\n    onUpdatePassword(data) {\r\n        this._settingService\r\n            .updatePassword(data)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    if(response.status=='FAILED'){\r\n                        this.responseMessage= MESSAGES.CUSTOM(response.message);\r\n                        this.errorType=\"error\";\r\n                    }else{\r\n                        this.errorType = \"success\";\r\n                        this.responseMessage = MESSAGES.UPDATED(\"Password\");\r\n                    }\r\n                },\r\n                (response) => super.onError(response)\r\n            );\r\n    }\r\n}\r\n","<div id=\"profile\" class=\"page-layout simple tabbed\">\r\n    <!-- HEADER -->\r\n    <div\r\n        class=\"header p-24\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n        fxLayout.gt-sm=\"row\"\r\n        fxLayoutAlign.gt-sm=\"space-between end\"\r\n    >\r\n        <div\r\n            class=\"user-info\"\r\n            fxLayout=\"column\"\r\n            fxLayoutAlign=\"center center\"\r\n            fxLayout.gt-sm=\"row\"\r\n            fxLayoutAlign.gt-sm=\"start center\"\r\n        >\r\n            <img\r\n                class=\"profile-image avatar huge\"\r\n                src=\"assets/images/avatars/user-male.png\"\r\n                [@animate]=\"{\r\n                    value: '*',\r\n                    params: { delay: '50ms', scale: '0.2' }\r\n                }\"\r\n            />\r\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\r\n                <div\r\n                    class=\"name\"\r\n                    [@animate]=\"{\r\n                        value: '*',\r\n                        params: { delay: '100ms', x: '-25px' }\r\n                    }\"\r\n                >\r\n                   <span *ngIf=\"currentUser.firstName || currentUser.lastName; else username\"> {{currentUser?.firstName + ' ' + currentUser?.lastName}}</span>\r\n                    <ng-template #username>\r\n                        <app-default-text></app-default-text>\r\n                    </ng-template>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\r\n                    <mat-icon class=\"s-16 status online\"></mat-icon>\r\n                    <span class=\"status-1\">{{currentUser.status}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div\r\n            class=\"actions\"\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"end center\"\r\n            [@animate]=\"{ value: '*', params: { delay: '200ms' } }\"\r\n        >\r\n            <button\r\n                (click)=\"openDialog()\"\r\n                mat-raised-button\r\n                color=\"accent\"\r\n                class=\"btn-update\"\r\n                aria-label=\"Follow\"\r\n            >\r\n                <mat-icon class=\"nav-link-icon\">edit</mat-icon>\r\n                <span>Update Profile</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- / HEADER -->\r\n   \r\n    <div class=\"content\">\r\n\r\n        <mat-tab-group dynamicHeight=\"true\">\r\n            <mat-tab label=\"Profile\">\r\n                <app-about [nationalities]=\"nationalities\" [user]=\"currentUser\"></app-about>\r\n            </mat-tab>\r\n            <mat-tab label=\"Security\">\r\n                <app-update-password [errorType]=\"errorType\" [responseMessage]=\"responseMessage\" (submit)=\"onUpdatePassword($event)\"></app-update-password>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}