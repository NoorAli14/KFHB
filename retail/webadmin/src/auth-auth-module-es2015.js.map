{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/views/forgot-password/forgot-password.component.ts","./src/app/auth/views/forgot-password/forgot-password.component.html","./src/app/auth/views/invitation/invitation.component.ts","./src/app/auth/views/invitation/invitation.component.html","./src/app/auth/views/login/login.component.ts","./src/app/auth/views/login/login.component.html","./src/app/auth/views/phone-verification/phone-verification.component.ts","./src/app/auth/views/phone-verification/phone-verification.component.html","./src/app/auth/views/reset-password/reset-password.component.ts","./src/app/auth/views/reset-password/reset-password.component.html","./src/app/shared/modules/material-forms/material-forms.module.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { LoginComponent } from \"./views/login/login.component\";\r\nimport { ResetPasswordComponent } from \"./views/reset-password/reset-password.component\";\r\nimport { ForgotPasswordComponent } from \"./views/forgot-password/forgot-password.component\";\r\nimport { PhoneVerificationComponent } from \"./views/phone-verification/phone-verification.component\";\r\nimport { InvitationComponent } from './views/invitation/invitation.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        pathMatch: \"full\",\r\n        redirectTo: \"login\",\r\n    },\r\n    {\r\n        path: \"login\",\r\n        component: LoginComponent,\r\n    },\r\n    {\r\n        path: \"verification\",\r\n        component: PhoneVerificationComponent,\r\n    },\r\n\r\n    {\r\n        path: \"reset-password/:token\",\r\n        component: ResetPasswordComponent,\r\n    },\r\n    {\r\n        path: \"forgot-password\",\r\n        component: ForgotPasswordComponent,\r\n    },\r\n    {\r\n        path: \"verification\",\r\n        component: PhoneVerificationComponent,\r\n    },\r\n    {\r\n        path: \"invitation/:token\",\r\n        component: InvitationComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\nimport { LoginComponent } from \"./views/login/login.component\";\r\nimport { FuseSharedModule } from \"@fuse/shared.module\";\r\nimport { ForgotPasswordComponent } from './views/forgot-password/forgot-password.component';\r\nimport { ResetPasswordComponent } from './views/reset-password/reset-password.component';\r\nimport { MaterialFormsModule } from '@shared/modules/material-forms/material-forms.module';\r\n\r\nimport { PhoneVerificationComponent } from './views/phone-verification/phone-verification.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { InvitationComponent } from './views/invitation/invitation.component';\r\n\r\n@NgModule({\r\n    declarations: [LoginComponent,  ForgotPasswordComponent, ResetPasswordComponent, PhoneVerificationComponent, InvitationComponent],\r\n    imports: [\r\n        CommonModule,\r\n        MaterialFormsModule,\r\n        FuseSharedModule,\r\n        SharedModule,\r\n        AuthRoutingModule\r\n    ],\r\n})\r\nexport class AuthModule {}\r\n","import { AuthenticationService } from \"@shared/services/auth/authentication.service\";\r\nimport { Component, OnInit, ViewEncapsulation, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\n\r\nimport { FuseConfigService } from \"@fuse/services/config.service\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { BaseComponent } from '@shared/components/base/base.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\n@Component({\r\n    selector: \"forgot-password\",\r\n    templateUrl: \"./forgot-password.component.html\",\r\n    styleUrls: [\"./forgot-password.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class ForgotPasswordComponent extends BaseComponent implements OnInit {\r\n    \r\n    \r\n    forgotPasswordForm: FormGroup;\r\n    constructor(\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _authService: AuthenticationService,\r\n        injector: Injector\r\n        ) {\r\n            super(injector);\r\n        // Configure the layout\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true,\r\n                },\r\n                toolbar: {\r\n                    hidden: true,\r\n                },\r\n                footer: {\r\n                    hidden: true,\r\n                },\r\n                sidepanel: {\r\n                    hidden: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.forgotPasswordForm = new FormGroup({\r\n            email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n        });\r\n    }\r\n    onSubmit() {\r\n        this._authService\r\n            .forgotPassword(this.forgotPasswordForm.value).pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                     this.errorType = \"success\";\r\n                     this.responseMessage = MESSAGES.PASSWORD_RESET_SENT();\r\n                },\r\n               (response=>super.onError(response))\r\n            );\r\n    }\r\n}\r\n","<div class=\"auth-container\" fxLayout=\"column\">\r\n    <div\r\n        class=\"auth-form-wrapper\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n    >\r\n        <div\r\n            class=\"auth-form\"\r\n            [@animate]=\"{\r\n                value: '*',\r\n                params: { duration: '300ms', y: '100px' }\r\n            }\"\r\n        >\r\n            <div class=\"logo\">\r\n                <img src=\"assets/images/logos/fuse.svg\" />\r\n            </div>\r\n\r\n            <div class=\"title\">RECOVER YOUR PASSWORD</div>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n        <br>\r\n            <form\r\n                name=\"forgotPasswordForm\"\r\n                [formGroup]=\"forgotPasswordForm\"\r\n                (ngSubmit)=\"onSubmit()\"\r\n                novalidate\r\n            >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email  <app-required-indicator></app-required-indicator></mat-label>\r\n                    <input matInput formControlName=\"email\" />\r\n                    <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n                     <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"forgotPasswordForm.get('email')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                </mat-form-field>\r\n\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <!-- <a class=\"link\" mat-button color=\"accent\" [routerLink]=\"'/auth/verification'\">Try another way</a> -->\r\n\r\n                 <button type=\"submit\"  mat-raised-button class=\"submit-button\" color=\"accent\"\r\n                        aria-label=\"SEND RESET LINK\" [disabled]=\"forgotPasswordForm.invalid\">\r\n                    SEND RESET LINK\r\n                </button>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"login\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <a\r\n                    class=\"link\"\r\n                    mat-button\r\n                    color=\"warn\"\r\n                    [routerLink]=\"'/auth/login'\"\r\n                    >Go back to login</a\r\n                >\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Injector } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { User } from \"@feature/entitlement/models/user.model\";\r\nimport { NATIONALITY_LIST, GENDER_LIST } from \"@shared/constants/app.constants\";\r\nimport { AuthenticationService } from \"@shared/services/auth/authentication.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FuseConfigService } from \"@fuse/services/config.service\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport {\r\n    snakeToCamelObject,\r\n    camelToSnakeCase,\r\n} from \"@shared/helpers/global.helper\";\r\nimport { ValidatorService } from \"@shared/services/validator-service/validator.service\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { MESSAGES } from \"@shared/constants/messages.constant\";\r\n\r\n@Component({\r\n    selector: \"app-invitation\",\r\n    templateUrl: \"./invitation.component.html\",\r\n    styleUrls: [\"./invitation.component.scss\"],\r\n    animations: fuseAnimations,\r\n})\r\nexport class InvitationComponent extends BaseComponent implements OnInit {\r\n    invitationForm: FormGroup;\r\n\r\n    response: User;\r\n    nationalityList: any[]=[];\r\n    genderList: any[] = GENDER_LIST;\r\n    token: string;\r\n    constructor(\r\n        private _authService: AuthenticationService,\r\n        private _fuseConfigService: FuseConfigService,\r\n        private activatedRoute: ActivatedRoute,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this.token = this.activatedRoute.snapshot.paramMap.get(\"token\");\r\n\r\n        // Configure the layout\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true,\r\n                },\r\n                toolbar: {\r\n                    hidden: true,\r\n                },\r\n                footer: {\r\n                    hidden: true,\r\n                },\r\n                sidepanel: {\r\n                    hidden: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n    ngOnInit(): void {\r\n        this.invitationForm = new FormGroup({\r\n            id: new FormControl(),\r\n            firstName: new FormControl(\"\", [Validators.required]),\r\n            middleName: new FormControl(),\r\n            lastName: new FormControl(\"\", [Validators.required]),\r\n            contactNo: new FormControl(\"\", [\r\n                Validators.required,\r\n                ValidatorService.numbersOnly,\r\n            ]),\r\n            gender: new FormControl(\"\", [Validators.required]),\r\n            status: new FormControl(\"\"),\r\n            email: new FormControl({ value: \"\", disabled: true }),\r\n            dateOfBirth: new FormControl(\"\", [Validators.required]),\r\n            nationalityId: new FormControl(\"\", [Validators.required]),\r\n            password: new FormControl(\"\", Validators.required),\r\n            confirmPassword: new FormControl(\"\", [\r\n                Validators.required,\r\n                this.confirmPasswordValidator.bind(this),\r\n            ]),\r\n        });\r\n        this.getUserByToken(this.token);\r\n    }\r\n    confirmPasswordValidator(control: FormControl): { [s: string]: boolean } {\r\n        if (\r\n            this.invitationForm &&\r\n            control.value !== this.invitationForm.controls.password.value\r\n        ) {\r\n            return { passwordNotMatch: true };\r\n        }\r\n        return null;\r\n    }\r\n    onSubmit() {\r\n        let model = { ...this.invitationForm.value };\r\n        model.dateOfBirth = new Date(model.dateOfBirth).toLocaleDateString();\r\n        model = camelToSnakeCase(model);\r\n        this._authService\r\n            .updateInvitation(model, this.token)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    this.errorType = \"success\";\r\n                    this.responseMessage = MESSAGES.UPDATED(\"Your Profile\");\r\n                    // setTimeout(() => {\r\n                    //     this.router.navigateByUrl('/auth/login');\r\n                    // }, 1000);\r\n                },\r\n                (error) => {\r\n                    this.errorType = \"error\";\r\n                    this.responseMessage = MESSAGES.UNKNOWN();\r\n                }\r\n            );\r\n    }\r\n    getUserByToken(token) {\r\n        this._authService\r\n            .getUserByToken(token)\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(\r\n                (response) => {\r\n                    const user = snakeToCamelObject(response[0]);\r\n                    this.invitationForm.patchValue(user);\r\n                    this.nationalityList= response[1];\r\n                },\r\n                ({ error }) => {\r\n                    this.errorType = \"error\";\r\n                    if (error.statusCode === 404) {\r\n                        this.errorType = \"warning\";\r\n                        this.responseMessage = MESSAGES.INVALID_INVITATION();\r\n                    } else {\r\n                        this.responseMessage = MESSAGES.UNKNOWN();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}\r\n","<div class=\"auth-container\" fxLayout=\"column\">\r\n    <div\r\n        class=\"auth-form-wrapper\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n    >\r\n        <div\r\n            class=\"invitation-form\"\r\n            [@animate]=\"{\r\n                value: '*',\r\n                params: { duration: '300ms', y: '100px' }\r\n            }\"\r\n        >\r\n        <div class=\"title\">UPDATE YOUR PROFILE</div>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <div fxLayout=\"row\">\r\n                <form\r\n                    class=\"p-24\"\r\n                    fxLayout=\"column\"\r\n                    fxLayoutAlign=\"start\"\r\n                    fxFlex=\"1 0\"\r\n                    name=\"userForm\"\r\n                    (ngSubmit)=\"onSubmit()\"\r\n                    novalidate\r\n                    [formGroup]=\"invitationForm\"\r\n                >\r\n                    <div\r\n                        fxLayout=\"row wrap\"\r\n                        fxLayout.lt-lg=\"column\"\r\n                        fxLayoutAlign.lt-lg=\"center\"\r\n                        fxLayoutGap=\"10px\"\r\n                        fxLayoutAlign=\"start center\"\r\n                        fxFlex=\"1 1 auto\"\r\n                    >\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>First Name <app-required-indicator></app-required-indicator></mat-label>\r\n                            <input matInput formControlName=\"firstName\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >account_circle</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('firstName')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Middle Name</mat-label>\r\n                            <input matInput formControlName=\"middleName\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >account_circle</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('middleName')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Last Name <app-required-indicator></app-required-indicator></mat-label>\r\n                            <input matInput formControlName=\"lastName\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >account_circle</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('lastName')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Email</mat-label>\r\n                            <input matInput  formControlName=\"email\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >email</mat-icon\r\n                            >\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Date of Birth <app-required-indicator></app-required-indicator></mat-label>\r\n                            <input\r\n                                matInput\r\n                                [matDatepicker]=\"picker\"\r\n                                formControlName=\"dateOfBirth\"\r\n                            />\r\n                            <mat-datepicker-toggle\r\n                                matSuffix\r\n                                [for]=\"picker\"\r\n                            ></mat-datepicker-toggle>\r\n                            <mat-datepicker #picker></mat-datepicker>\r\n                            <!-- <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon> -->\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('dateOfBirth')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pr-4\"\r\n                        >\r\n                            <mat-label>Gender <app-required-indicator></app-required-indicator></mat-label>\r\n                            <mat-select formControlName=\"gender\">\r\n                                <mat-option\r\n                                    *ngFor=\"let item of genderList\"\r\n                                    [value]=\"item.id\"\r\n                                >\r\n                                    {{ item.name }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >face</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('gender')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pr-4\"\r\n                        >\r\n                            <mat-label>Nationality <app-required-indicator></app-required-indicator></mat-label>\r\n                            <mat-select formControlName=\"nationalityId\">\r\n                                <mat-option\r\n                                    *ngFor=\"let item of nationalityList\"\r\n                                    [value]=\"item.id\"\r\n                                >\r\n                                    {{ item.nationality }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >outlined_flag</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('nationalityId')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Contact No <app-required-indicator></app-required-indicator></mat-label>\r\n                            <input matInput formControlName=\"contactNo\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >phone</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('contactNo')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                            appearance=\"outline\"\r\n                            fxFlex=\"48\"\r\n                            class=\"pl-4\"\r\n                        >\r\n                            <mat-label>Password <app-required-indicator></app-required-indicator></mat-label>\r\n                            <input type=\"password\" matInput formControlName=\"password\" />\r\n                            <mat-icon matSuffix class=\"secondary-text\"\r\n                                >account_circle</mat-icon\r\n                            >\r\n                            <mat-error>\r\n                                <app-mat-error\r\n                                    [control]=\"invitationForm.get('password')\"\r\n                                ></app-mat-error>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                        <mat-form-field\r\n                        appearance=\"outline\"\r\n                        fxFlex=\"48\"\r\n                        class=\"pl-4\"\r\n                    >\r\n                        <mat-label>Confirm Password <app-required-indicator></app-required-indicator></mat-label>\r\n                        <input type=\"password\" matInput formControlName=\"confirmPassword\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >account_circle</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"invitationForm.get('confirmPassword')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    </div>\r\n\r\n                    <div\r\n                        class=\"actions\"\r\n                        fxLayoutGap=\"10px\"\r\n                        fxLayout=\"row\"\r\n                        fxLayoutAlign=\"center center\"\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            mat-raised-button\r\n                            color=\"accent\"\r\n                            [routerLink]=\"'/auth/login'\"\r\n                        >\r\n                            Back\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button\r\n                        class=\"post-button\"\r\n                            type=\"submit\"\r\n                            [disabled]=\"invitationForm.invalid\"\r\n                            mat-raised-button\r\n                            color=\"accent\"\r\n                            aria-label=\"Send Message\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit, ViewEncapsulation, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\n\r\nimport { FuseConfigService } from \"@fuse/services/config.service\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { AuthenticationService } from \"@shared/services/auth/authentication.service\";\r\nimport { BaseComponent } from \"@shared/components/base/base.component\";\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\n@Component({\r\n    selector: \"app-login\",\r\n    templateUrl: \"./login.component.html\",\r\n    styleUrls: [\"./login.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class LoginComponent extends BaseComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _authService: AuthenticationService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        injector: Injector\r\n    ) {\r\n        super(injector);\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true,\r\n                },\r\n                toolbar: {\r\n                    hidden: true,\r\n                },\r\n                footer: {\r\n                    hidden: true,\r\n                },\r\n                sidepanel: {\r\n                    hidden: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.returnUrl = this.route.snapshot.queryParamMap.get(\"returnUrl\");\r\n        this.loginForm = new FormGroup({\r\n            email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n            password: new FormControl(\"\", [Validators.required]),\r\n        });\r\n    }\r\n    onSubmit() {\r\n        const model = this.loginForm.value;\r\n        this._authService.login(model).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                this.errorType = \"success\";\r\n                this.responseMessage = MESSAGES.LOGGED_IN();\r\n                setTimeout(() => {\r\n                    this.router.navigateByUrl(\r\n                        this.returnUrl ? this.returnUrl : \"/ent/user\"\r\n                    );\r\n                }, 1000);\r\n            },\r\n            (response) => {\r\n                this.errorType = \"error\";\r\n                if (response.statusCode === 401) {\r\n                    this.responseMessage = MESSAGES.INVALID_CREDENTIAL();\r\n                } else {\r\n                    this.responseMessage = MESSAGES.UNKNOWN();\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"auth-container\" fxLayout=\"column\">\r\n    <div\r\n        class=\"auth-form-wrapper\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n    >\r\n        <div\r\n            class=\"auth-form\"\r\n            [@animate]=\"{\r\n                value: '*',\r\n                params: { duration: '300ms', y: '100px' }\r\n            }\"\r\n        >\r\n            <div class=\"logo\">\r\n                <img src=\"assets/images/logos/fuse.svg\" />\r\n            </div>\r\n\r\n            <div class=\"title\">LOGIN TO YOUR ACCOUNT</div>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n            <br>\r\n            <form\r\n                name=\"loginForm\"\r\n                [formGroup]=\"loginForm\"\r\n                (ngSubmit)=\"onSubmit()\"\r\n                novalidate\r\n            >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email <app-required-indicator></app-required-indicator></mat-label>\r\n                    <input matInput formControlName=\"email\" />\r\n                    <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n                    <mat-error>\r\n                        <app-mat-error\r\n                            [control]=\"loginForm.get('email')\"\r\n                        ></app-mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Password <app-required-indicator></app-required-indicator></mat-label>\r\n                    <input\r\n                        matInput\r\n                        type=\"password\"\r\n                        formControlName=\"password\"\r\n                    />\r\n                    <mat-icon matSuffix class=\"secondary-text\"\r\n                        >vpn_key</mat-icon\r\n                    >\r\n                    <mat-error>\r\n                        <app-mat-error\r\n                            [control]=\"loginForm.get('password')\"\r\n                        ></app-mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <div\r\n                    class=\"remember-forgot-password\"\r\n                    fxLayout=\"row\"\r\n                    fxLayout.xs=\"column\"\r\n                    fxLayoutAlign=\"space-between center\"\r\n                >\r\n                    <a\r\n                        class=\"forgot-password\"\r\n                        mat-button\r\n                        color=\"warn\"\r\n                        [routerLink]=\"'/auth/forgot-password'\"\r\n                    >\r\n                        Forgot Password?\r\n                    </a>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    mat-raised-button\r\n                    color=\"accent\"\r\n                    class=\"submit-button\"\r\n                    aria-label=\"LOG IN\"\r\n                    [disabled]=\"loginForm.invalid\"\r\n                >\r\n                    LOGIN\r\n                </button>\r\n            </form>\r\n            <div class=\"separator\">\r\n                <span class=\"text\">Login with</span>\r\n            </div>\r\n\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n                <button\r\n                    mat-raised-button\r\n                    class=\"google\"\r\n                    style=\"background-color: #d73d32; color: white;\"\r\n                >\r\n                    Google\r\n                </button>\r\n\r\n                <button\r\n                    mat-raised-button\r\n                    class=\"facebook\"\r\n                    style=\"background-color: rgb(63, 92, 154); color: white;\"\r\n                >\r\n                    Facebook\r\n                </button>\r\n                <button\r\n                    mat-raised-button\r\n                    class=\"github\"\r\n                    style=\"background-color: black; color: white;\"\r\n                >\r\n                    Github\r\n                </button>\r\n                <button\r\n                    mat-raised-button\r\n                    class=\"twitter\"\r\n                    style=\"background-color: #2196f3; color: white;\"\r\n                >\r\n                    Twitter\r\n                </button>\r\n            </div>\r\n            <!-- <div class=\"register\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                <span class=\"text\">Don't have an account?</span>\r\n                <a class=\"link\" [routerLink]=\"'/auth/register'\">Create an account</a>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n    FormGroup,\r\n    FormBuilder,\r\n    Validators,\r\n    FormControl,\r\n} from \"@angular/forms\";\r\nimport { FuseConfigService } from \"@fuse/services/config.service\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\n\r\n@Component({\r\n    selector: \"app-phone-verification\",\r\n    templateUrl: \"./phone-verification.component.html\",\r\n    styleUrls: [\"./phone-verification.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class PhoneVerificationComponent implements OnInit {\r\n    recoverPasswordForm: FormGroup;\r\n\r\n    constructor(\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _formBuilder: FormBuilder\r\n    ) {\r\n        // Configure the layout\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true,\r\n                },\r\n                toolbar: {\r\n                    hidden: true,\r\n                },\r\n                footer: {\r\n                    hidden: true,\r\n                },\r\n                sidepanel: {\r\n                    hidden: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.recoverPasswordForm = new FormGroup({\r\n            code: new FormControl(\"\", [\r\n                Validators.required,\r\n                Validators.minLength(6),\r\n                Validators.maxLength(6),\r\n            ]),\r\n            password: new FormControl(\"\", [Validators.required]),\r\n            confirmPassword: new FormControl(\"\", [\r\n                Validators.required,\r\n                this.passwordMatcher.bind(this),\r\n            ]),\r\n        });\r\n    }\r\n    passwordMatcher(control: FormControl): { [s: string]: boolean } {\r\n        if (\r\n            this.recoverPasswordForm &&\r\n            control.value !== this.recoverPasswordForm.controls.password.value\r\n        ) {\r\n            return { passwordNotMatch: true };\r\n        }\r\n        return null;\r\n    }\r\n    onSubmit() {\r\n        console.log(this.recoverPasswordForm)\r\n    }\r\n}\r\n","<div class=\"auth-container\" fxLayout=\"column\">\r\n    <div\r\n        class=\"auth-form-wrapper\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center center\"\r\n    >\r\n        <div\r\n            class=\"auth-form\"\r\n            [@animate]=\"{\r\n                value: '*',\r\n                params: { duration: '300ms', y: '100px' }\r\n            }\"\r\n        >\r\n            <div class=\"logo\">\r\n                <img src=\"assets/images/logos/fuse.svg\" />\r\n            </div>\r\n\r\n            <div class=\"title\">ACCOUNT RECOVERY</div>\r\n            <div class=\"sub-title\">\r\n                A 6 digit verification code has been sent to your registered\r\n                mobile number. Enter that code to continue.\r\n            </div>\r\n\r\n            <form\r\n                name=\"recoverPasswordForm\"\r\n                [formGroup]=\"recoverPasswordForm\"\r\n                novalidate\r\n                (ngSubmit)=\"onSubmit()\"\r\n            >\r\n                <div\r\n                    fxLayout=\"row wrap\"\r\n                    fxLayout.lt-lg=\"column\"\r\n                    fxLayoutAlign.lt-lg=\"center\"\r\n                    fxLayoutGap=\"10px\"\r\n                    fxLayoutAlign=\"start center\"\r\n                    fxFlex=\"1 1 auto\"\r\n                >\r\n                    <mat-form-field appearance=\"outline\" class=\"pl-4\">\r\n                        <mat-label>Code</mat-label>\r\n                        <input matInput formControlName=\"code\" />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >phone</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"recoverPasswordForm.get('code')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\" class=\"pr-4\">\r\n                        <mat-label>Password</mat-label>\r\n                        <input\r\n                            type=\"password\"\r\n                            matInput\r\n                            formControlName=\"password\"\r\n                        />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >vpn_key</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"recoverPasswordForm.get('password')\"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\" class=\"pl-4\">\r\n                        <mat-label>Confirm Password</mat-label>\r\n                        <input\r\n                            type=\"password\"\r\n                            matInput\r\n                            formControlName=\"confirmPassword\"\r\n                        />\r\n                        <mat-icon matSuffix class=\"secondary-text\"\r\n                            >vpn_key</mat-icon\r\n                        >\r\n                        <mat-error>\r\n                            <app-mat-error\r\n                                [control]=\"\r\n                                    recoverPasswordForm.get('confirmPassword')\r\n                                \"\r\n                            ></app-mat-error>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\r\n                        <button\r\n                            mat-raised-button\r\n                            class=\"submit-button\"\r\n                            color=\"accent\"\r\n                            aria-label=\"SEND RESET LINK\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"login-redirect\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <a\r\n                    class=\"link\"\r\n                    mat-button\r\n                    color=\"warn\"\r\n                    [routerLink]=\"'/auth/login'\"\r\n                    >Go back to login</a\r\n                >\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit, ViewEncapsulation, Injector } from \"@angular/core\";\r\nimport {\r\n    FormBuilder,\r\n    FormGroup,\r\n    Validators,\r\n    FormControl,\r\n} from \"@angular/forms\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\nimport { FuseConfigService } from \"@fuse/services/config.service\";\r\nimport { fuseAnimations } from \"@fuse/animations\";\r\nimport { AuthenticationService } from \"@shared/services/auth/authentication.service\";\r\nimport { camelToSnakeCase } from \"@shared/helpers/global.helper\";\r\nimport { BaseComponent } from '@shared/components/base/base.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MESSAGES } from '@shared/constants/messages.constant';\r\n\r\n@Component({\r\n    selector: \"reset-password\",\r\n    templateUrl: \"./reset-password.component.html\",\r\n    styleUrls: [\"./reset-password.component.scss\"],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: fuseAnimations,\r\n})\r\nexport class ResetPasswordComponent extends BaseComponent implements OnInit, OnDestroy {\r\n    resetPasswordForm: FormGroup;\r\n   token:string;\r\n \r\n    constructor(\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _authService: AuthenticationService,\r\n         private activatedRoute: ActivatedRoute\r\n        ,\r\n        injector: Injector\r\n        ) {\r\n            super(injector);\r\n        this.token= this.activatedRoute.snapshot.paramMap.get(\"token\");\r\n        // Configure the layout\r\n        this._fuseConfigService.config = {\r\n            layout: {\r\n                navbar: {\r\n                    hidden: true,\r\n                },\r\n                toolbar: {\r\n                    hidden: true,\r\n                },\r\n                footer: {\r\n                    hidden: true,\r\n                },\r\n                sidepanel: {\r\n                    hidden: true,\r\n                },\r\n            },\r\n        };\r\n\r\n        // Set the private defaults\r\n       \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getEmailTokenStatus();\r\n        this.resetPasswordForm = new FormGroup({\r\n            password: new FormControl(\"\", Validators.required),\r\n            passwordConfirm: new FormControl(\"\", [\r\n                Validators.required,\r\n                this.confirmPasswordValidator.bind(this),\r\n            ]),\r\n        });\r\n    }\r\n\r\n    confirmPasswordValidator(control: FormControl): { [s: string]: boolean } {\r\n        if (\r\n            this.resetPasswordForm &&\r\n            control.value !== this.resetPasswordForm.controls.password.value\r\n        ) {\r\n            return { passwordNotMatch: true };\r\n        }\r\n        return null;\r\n    }\r\n    onSubmit() {\r\n        let model = this.resetPasswordForm.value;\r\n        model = camelToSnakeCase(model);\r\n        this._authService.resetPassword(model,this.token).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n                 this.errorType = \"success\";\r\n                 this.responseMessage = MESSAGES.PASSWORD_UPDATED();\r\n            },\r\n           (response=>super.onError(response))\r\n        );\r\n    }\r\n    getEmailTokenStatus() {\r\n        this._authService.getTokenStatus(this.token).pipe(takeUntil(this._unsubscribeAll)).subscribe(\r\n            (response) => {\r\n\r\n            },\r\n            (error) => {\r\n                 this.errorType = \"error\";\r\n                 this.responseMessage = MESSAGES.INVALID_RESET_TOKEN();\r\n            }\r\n        );\r\n    }\r\n  \r\n}\r\n","<div class=\"auth-container\" fxLayout=\"column\">\r\n    <div class=\"auth-form-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n        <div class=\"auth-form\" [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\">\r\n            <div class=\"logo\">\r\n                <img src=\"assets/images/logos/fuse.svg\">\r\n            </div>\r\n            <div class=\"title\">RESET YOUR PASSWORD</div>\r\n            <app-message-box [type]=\"errorType\" [message]=\"responseMessage\"></app-message-box>\r\n        <br>\r\n            <form *ngIf=\"errorType!='error'\" name=\"resetPasswordForm\" [formGroup]=\"resetPasswordForm\"   (ngSubmit)=\"onSubmit()\" novalidate>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Password<app-required-indicator></app-required-indicator></mat-label>\r\n                    <input matInput type=\"password\" formControlName=\"password\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n                    <mat-error>\r\n                        <app-mat-error\r\n                            [control]=\"resetPasswordForm.get('password')\"\r\n                        ></app-mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Confirm Password <app-required-indicator></app-required-indicator></mat-label>\r\n                    <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n                    <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n                    <mat-error>\r\n                        <app-mat-error\r\n                            [control]=\"resetPasswordForm.get('passwordConfirm')\"\r\n                        ></app-mat-error>\r\n                    </mat-error>\r\n                </mat-form-field>\r\n                <button type=\"submit\" mat-raised-button class=\"submit-button\" color=\"accent\"\r\n                        aria-label=\"RESET MY PASSWORD\" [disabled]=\"resetPasswordForm.invalid\">\r\n                    RESET MY PASSWORD\r\n                </button>\r\n            </form>\r\n            <div class=\"login\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <a class=\"link\" mat-button color=\"warn\" [routerLink]=\"'/auth/login'\">Go back to login</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatRippleModule } from \"@angular/material/core\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatRippleModule,\r\n        MatDatepickerModule,\r\n        MatSelectModule,\r\n        MatTooltipModule,\r\n        MatToolbarModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatCheckboxModule,\r\n    ],\r\n    exports: [\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatRippleModule,\r\n        MatDatepickerModule,\r\n        MatSelectModule,\r\n        MatTooltipModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatCheckboxModule,\r\n    ],\r\n})\r\nexport class MaterialFormsModule {}\r\n"],"sourceRoot":"webpack:///"}